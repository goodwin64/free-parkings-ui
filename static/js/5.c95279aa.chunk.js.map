{"version":3,"sources":["containers/DashboardPage/DashboardPage.styled.ts","containers/DashboardPage/DashboardPage.tsx"],"names":["LinksContainer","styled","div","_templateObject","NavLinkWrapper","_templateObject2","COLORS","colorAccent4","DashboardPage","react_default","a","createElement","commonStyled","react_router_dom","to","UrlService","settingsPageUrl","src","ImagesService","driverImages","myAccount","alt","findParkingsPageUrl","findParkings","allUsersPageUrl","drivers","React","PureComponent","mapStateToProps","createStructuredSelector","username","usernameSelector","avatarUrl","avatarUrlSelector","user","userInfoSelector","withConnect","connect","compose"],"mappings":"qgCAIO,IAAMA,EAAiBC,IAAOC,IAAVC,KAMdC,EAAiBH,IAAOC,IAAVG,IAMdC,IAAOC,uBCQdC,mLAOF,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,IAAWC,iBACnBP,EAAAC,EAAAC,cAAA,OAAKM,IAAKC,IAAcC,aAAaC,UAAWC,IAAI,eACpDZ,EAAAC,EAAAC,cAAA,0BAIJF,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,IAAWO,qBACnBb,EAAAC,EAAAC,cAAA,OAAKM,IAAKC,IAAcC,aAAaI,aAAcF,IAAI,kBACvDZ,EAAAC,EAAAC,cAAA,gCAIJF,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,IAAWS,iBACnBf,EAAAC,EAAAC,cAAA,OAAKM,IAAKC,IAAcC,aAAaM,QAASJ,IAAI,YAClDZ,EAAAC,EAAAC,cAAA,8BA3Bce,IAAMC,eAoC5BC,EAAkBC,YAA6D,CACnFC,SAAUC,IACVC,UAAWC,IACXC,KAAMC,MAGFC,EAAcC,YAAQT,GAEbU,4BACbF,EADaE,CAEb9B","file":"static/js/5.c95279aa.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\n\nexport const LinksContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const NavLinkWrapper = styled.div`\n  width: 25%;\n  height: 360px;\n  \n  & > a {\n    align-items: center;\n    color: ${COLORS.colorAccent4};\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    padding-bottom: 20px;\n    position: relative;\n    width: 100%;\n  }\n  \n  & img {\n    width: 80%;\n  }\n  \n  & h2 {\n    bottom: 10px;\n    left: 50%;\n    font-size: 36px;\n    position: absolute;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(150, 150, 150, 1);\n    transform: translateX(-50%);\n    width: 100%;\n    \n    @media (max-width: 700px) {\n      font-size: 20px;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { RootReducer } from '../../store/rootReducer';\nimport { avatarUrlSelector, userInfoSelector, usernameSelector } from '../../store/userState/selectors';\nimport { Link } from 'react-router-dom';\nimport UrlService from '../../services/Url.service';\nimport ImagesService from '../../services/Images.service';\nimport * as styled from './DashboardPage.styled';\nimport * as commonStyled from '../../components/CommonStyled/commonStyled';\nimport { UserInfo } from '../../interfaces/UserInfo';\n\n\ninterface DashboardPageOwnProps {\n  username: string,\n  avatarUrl: string,\n  user: UserInfo,\n}\n\ninterface DashboardPageProps extends DashboardPageOwnProps {}\n\nclass DashboardPage extends React.PureComponent<DashboardPageProps> {\n  static propTypes = {\n    username: PropTypes.string.isRequired,\n    avatarUrl: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <commonStyled.PageWrapper>\n        <styled.LinksContainer>\n          <styled.NavLinkWrapper>\n            <Link to={UrlService.settingsPageUrl}>\n              <img src={ImagesService.driverImages.myAccount} alt=\"my account\"/>\n              <h2>My account</h2>\n            </Link>\n          </styled.NavLinkWrapper>\n\n          <styled.NavLinkWrapper>\n            <Link to={UrlService.findParkingsPageUrl}>\n              <img src={ImagesService.driverImages.findParkings} alt=\"find parkings\"/>\n              <h2>Find the parking</h2>\n            </Link>\n          </styled.NavLinkWrapper>\n\n          <styled.NavLinkWrapper>\n            <Link to={UrlService.allUsersPageUrl}>\n              <img src={ImagesService.driverImages.drivers} alt=\"drivers\"/>\n              <h2>Users</h2>\n            </Link>\n          </styled.NavLinkWrapper>\n        </styled.LinksContainer>\n      </commonStyled.PageWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, DashboardPageOwnProps>({\n  username: usernameSelector,\n  avatarUrl: avatarUrlSelector,\n  user: userInfoSelector,\n});\n\nconst withConnect = connect(mapStateToProps);\n\nexport default compose(\n  withConnect,\n)(DashboardPage);\n"],"sourceRoot":""}