{"version":3,"sources":["components/TextFieldInput/TextFieldInput.styled.ts","containers/LoginPage/LoginPage.styled.ts","assets/icons/ShowPasswordEyeIcon.tsx","services/FormsValidator.service.ts","containers/LoginPage/LoginPage.tsx"],"names":["TextFieldInput","styled","input","_templateObject","COLORS","colorAntiMain","props","error","colorBorderError","theme","borderColor","PageWrapper","CommonPageWrapper","LoginPage_styled_templateObject","LoginFormWrapper","Tile","_templateObject2","LoginFormContainer","div","_templateObject3","LoginForm","form","_templateObject4","LoginFormHeader","h2","_templateObject5","colorAccent4","TextFieldLabel","label","_templateObject6","LoginFormInput","CommonTextFieldInput","_templateObject7","ErrorBlock","_templateObject8","colorAccent2","visible","ShowPasswordEyeButton","button","_templateObject9","ShowPasswordEyeIcon","react","xmlns","width","height","viewBox","fill","fillRule","d","SubmitButtonContainer","_templateObject10","SubmitButton","_templateObject11","colorInactive","SignupLink","Link","_templateObject12","FormsValidatorService","email","emailValidator","test","username","usernameValidator","password","length","LoginPage","state","usernameValid","passwordValid","usernameTouched","passwordTouched","passwordVisible","onSubmit","e","preventDefault","isUsernameValid","_this","setState","signinUser","onUsernameChange","target","value","onUsernameBlur","onPasswordChange","onPasswordBlur","type","togglePasswordVisibility","prevState","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","_LoginPage_styled__WEBPACK_IMPORTED_MODULE_9__","to","UrlService","signupPageUrl","this","autoComplete","placeholder","onChange","onBlur","isUsernameErrorShown","isPasswordErrorShown","onClick","disabled","isSubmitNotAllowed","areCredentialsInvalid","renderSignupLink","isSigninAttemptInProgress","React","PureComponent","mapStateToProps","createStructuredSelector","areCredentialsInvalidSelector","isSigninAttemptInProgressSelector","mapDispatchToProps","signinUserAttempt","withConnect","connect","compose"],"mappings":"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","file":"static/js/1.a66dc78d.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\nexport const TextFieldInput = styled.input<{\n  error: boolean,\n}>`\n  background-color: ${COLORS.colorAntiMain};\n  border: 1px solid ${props => props.error ? COLORS.colorBorderError : props.theme.borderColor};\n  border-radius: 3px;\n  padding: 12px 40px 12px 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { COLORS } from '../../constants/colors';\nimport { PageWrapper as CommonPageWrapper } from '../../components/CommonStyled/PageWrapper.styled';\nimport { TextFieldInput as CommonTextFieldInput } from '../../components/TextFieldInput/TextFieldInput.styled';\nimport { default as CommonShowPasswordEyeIcon } from '../../assets/icons/ShowPasswordEyeIcon';\nimport { Tile } from '../../components/CommonStyled/Tile.styled';\n\n\nexport const PageWrapper = styled(CommonPageWrapper)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const LoginFormWrapper = styled(Tile)`\n  overflow: hidden;\n`;\n\nexport const LoginFormContainer = styled.div`\n  padding: 30px 75px 15px;\n  background-color: ${COLORS.colorAntiMain};\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LoginFormHeader = styled.h2`\n  background-color: ${COLORS.colorAccent4};\n  color: ${COLORS.colorAntiMain};\n  font-weight: bold;\n  margin: 0;\n  padding: 22px;\n  text-align: center;\n`;\n\nexport const TextFieldLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  position:relative;\n  \n  p {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const LoginFormInput = styled(CommonTextFieldInput)`\n  font-size: 16px;\n  height: 40px;\n  padding: 12px 40px 12px 20px;\n  transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n              box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  width: 100%;\n`;\n\nexport const ErrorBlock = styled.div<{\n  visible: boolean,\n}>`\n  color: ${COLORS.colorAccent2};\n  font-size: 12px;\n  height: 30px;\n  line-height: 30px;\n  visibility: ${(props) => props.visible ? 'visible' : 'hidden'};\n`;\n\nexport const ShowPasswordEyeButton = styled.button`\n  bottom: 8px;\n  position: absolute;\n  right: 10px;\n`;\n\nexport const ShowPasswordEyeIcon = CommonShowPasswordEyeIcon;\n\nexport const SubmitButtonContainer = styled.div`\n  padding: 0 30px;\n  \n  &:hover {\n    filter: brightness(95%);\n  }\n`;\n\nexport const SubmitButton = styled.input`\n  background-color: ${COLORS.colorAccent4};\n  border-radius: 35px;\n  box-shadow: none;\n  color: ${COLORS.colorAntiMain};\n  cursor: pointer;\n  font-size: 16px;\n  height: 45px;\n  padding: 0 10px;\n  transition: all 0.25s ease;\n  width: 100%;\n  \n  &[disabled] {\n    background-color: ${COLORS.colorInactive};\n    cursor: not-allowed;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  align-self: flex-end;\n`;","import * as React from 'react';\n\nimport { COLORS } from '../../constants/colors';\n\n\nexport default function ShowPasswordEyeIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"16\" viewBox=\"0 0 22 16\">\n      <path fill={COLORS.colorAccent4} fillRule=\"nonzero\"\n            d=\"M11 .5C6 .5 1.73 3.61 0 8c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5C20.27 3.61 16 .5 11 .5zM11 13c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8C9.34 5 8 6.34 8 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n    </svg>\n  );\n}\n","export default class FormsValidatorService {\n  static emailValidator = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  static usernameValidator = /^[A-Za-z0-9]{1,20}$/;\n\n  public static isEmailValid(email: string): boolean {\n    return FormsValidatorService.emailValidator.test(email);\n  }\n\n  public static isUsernameValid(username: string): boolean {\n    return FormsValidatorService.usernameValidator.test(username);\n  }\n\n  public static isPasswordValid(password: string): boolean {\n    return password.length > 0 && password.length < 20;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport FormsValidatorService from '../../services/FormsValidator.service';\nimport * as styled from './LoginPage.styled';\nimport { signinUserAttempt, signinUserAttemptActionCreator } from '../../store/userState/actions';\nimport { createStructuredSelector } from 'reselect';\nimport { areCredentialsInvalidSelector, isSigninAttemptInProgressSelector } from '../../store/userState/selectors';\nimport { RootReducer } from '../../store/rootReducer';\nimport UrlService from '../../services/Url.service';\n\n\ninterface LoginPageState {\n  username: string,\n  password: string,\n  usernameValid: boolean,\n  passwordValid: boolean,\n  usernameTouched: boolean,\n  passwordTouched: boolean,\n  passwordVisible: boolean,\n}\n\ninterface LoginPageOwnProps {\n  areCredentialsInvalid: boolean,\n  isSigninAttemptInProgress: boolean,\n}\n\ninterface LoginPageDispatchProps {\n  signinUser: signinUserAttemptActionCreator,\n}\n\ninterface LoginPageProps extends LoginPageOwnProps, LoginPageDispatchProps {\n}\n\nclass LoginPage extends React.PureComponent<LoginPageProps, LoginPageState> {\n  static propTypes = {\n    signinUser: PropTypes.func.isRequired,\n    areCredentialsInvalid: PropTypes.bool.isRequired,\n    isSigninAttemptInProgress: PropTypes.bool.isRequired,\n  };\n\n  state: LoginPageState = {\n    username: '',\n    password: '',\n    usernameValid: true,\n    passwordValid: true,\n    usernameTouched: false,\n    passwordTouched: false,\n    passwordVisible: false,\n  };\n\n  get isUsernameErrorShown() {\n    return !this.state.usernameValid && this.state.usernameTouched;\n  }\n\n  get isPasswordErrorShown() {\n    return !this.state.passwordValid && this.state.passwordTouched;\n  }\n\n  get isSubmitNotAllowed() {\n    return !this.state.usernameValid || !this.state.passwordValid || this.props.isSigninAttemptInProgress;\n  }\n\n  get areCredentialsInvalid() {\n    return this.props.areCredentialsInvalid && !this.state.passwordTouched && !this.state.usernameTouched;\n  }\n\n  onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!FormsValidatorService.isUsernameValid(this.state.username) || this.state.password.length === 0) {\n      this.setState({\n        usernameValid: FormsValidatorService.isUsernameValid(this.state.username),\n        passwordValid: this.state.password.length !== 0,\n        usernameTouched: true,\n        passwordTouched: true,\n      });\n    } else {\n      this.setState({\n        usernameTouched: false,\n        passwordTouched: false,\n      });\n      this.props.signinUser(this.state.username, this.state.password);\n    }\n  };\n\n  onUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onUsernameBlur = (e: React.FocusEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    password: e.target.value,\n    passwordValid: e.target.value.length !== 0,\n    passwordTouched: true,\n  });\n\n  onPasswordBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.target.type === 'password' || e.target.type === 'text') {\n      this.setState({\n        password: e.target.value,\n        passwordValid: e.target.value.length !== 0,\n        passwordTouched: true,\n      });\n    }\n  };\n\n  togglePasswordVisibility = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      passwordVisible: !prevState.passwordVisible,\n    }));\n  };\n\n  renderSignupLink() {\n    return (\n      <>\n        <styled.SignupLink to={UrlService.signupPageUrl}>\n          Create new account\n        </styled.SignupLink>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <styled.PageWrapper>\n        <styled.LoginFormWrapper>\n          <styled.LoginFormHeader>\n            Log in\n          </styled.LoginFormHeader>\n          <styled.LoginFormContainer>\n            <styled.LoginForm\n              onSubmit={this.onSubmit}\n            >\n              <styled.TextFieldLabel>\n                <p>Username</p>\n                <styled.LoginFormInput\n                  type=\"text\"\n                  autoComplete=\"username\"\n                  placeholder=\"Enter your username\"\n                  value={this.state.username}\n                  onChange={this.onUsernameChange}\n                  onBlur={this.onUsernameBlur}\n                  error={this.isUsernameErrorShown}\n                />\n              </styled.TextFieldLabel>\n              <styled.ErrorBlock\n                visible={this.isUsernameErrorShown}\n              >\n                ● wrong username\n              </styled.ErrorBlock>\n              <styled.TextFieldLabel>\n                <p>Password</p>\n                <styled.LoginFormInput\n                  type={this.state.passwordVisible ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  placeholder=\"Enter password\"\n                  value={this.state.password}\n                  error={this.isPasswordErrorShown}\n                  onChange={this.onPasswordChange}\n                  onBlur={this.onPasswordBlur}\n                />\n                <styled.ShowPasswordEyeButton onClick={this.togglePasswordVisibility}>\n                  <styled.ShowPasswordEyeIcon/>\n                </styled.ShowPasswordEyeButton>\n              </styled.TextFieldLabel>\n              <styled.ErrorBlock\n                visible={this.isPasswordErrorShown}\n              >\n                ● wrong password\n              </styled.ErrorBlock>\n              <styled.SubmitButtonContainer>\n                <styled.SubmitButton\n                  type=\"submit\"\n                  disabled={this.isSubmitNotAllowed}\n                  value=\"Log in\"\n                />\n              </styled.SubmitButtonContainer>\n              <styled.ErrorBlock\n                visible={this.areCredentialsInvalid}\n              >\n                ● wrong username or password\n              </styled.ErrorBlock>\n              {this.renderSignupLink()}\n            </styled.LoginForm>\n          </styled.LoginFormContainer>\n        </styled.LoginFormWrapper>\n      </styled.PageWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, LoginPageOwnProps>({\n  areCredentialsInvalid: areCredentialsInvalidSelector,\n  isSigninAttemptInProgress: isSigninAttemptInProgressSelector,\n});\n\nconst mapDispatchToProps = {\n  signinUser: signinUserAttempt,\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect,\n)(LoginPage);\n"],"sourceRoot":""}