{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","constants/colors.ts","components/CommonStyled/Tile.styled.ts","components/CommonStyled/PageWrapper.styled.ts","services/FormsValidator.service.ts","components/TextFieldInput/TextFieldInput.styled.ts","containers/LoginPage/LoginPage.styled.ts","assets/icons/ShowPasswordEyeIcon.tsx","containers/LoginPage/LoginPage.tsx"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","__webpack_require__","d","__webpack_exports__","COLORS","colorMainText","colorGreyPopup","colorAntiMain","colorExtraText","colorAccent1","colorAccent2","colorAccent3","colorAccent4","colorInactive","colorBorder","colorBorderError","pageBackground","Tile","styled","section","_templateObject","_ref","withRoundedCorners","_ref2","withShadow","TileHeader","header","_templateObject2","TileBody","main","_templateObject3","defaultProps","PageWrapper","FormsValidatorService","email","emailValidator","test","username","usernameValidator","password","length","TextFieldInput","input","props","error","theme","borderColor","CommonPageWrapper","LoginPage_styled_templateObject","LoginFormWrapper","LoginFormContainer","div","LoginForm","form","_templateObject4","LoginFormHeader","h2","_templateObject5","TextFieldLabel","label","_templateObject6","LoginFormInput","CommonTextFieldInput","_templateObject7","ErrorBlock","_templateObject8","visible","ShowPasswordEyeButton","button","_templateObject9","ShowPasswordEyeIcon","react","xmlns","width","height","viewBox","fill","fillRule","SubmitButtonContainer","_templateObject10","SubmitButton","_templateObject11","SignupLink","Link","_templateObject12","LoginPage","state","usernameValid","passwordValid","usernameTouched","passwordTouched","passwordVisible","onSubmit","e","preventDefault","isUsernameValid","_this","setState","signinUser","onUsernameChange","target","onUsernameBlur","onPasswordChange","onPasswordBlur","type","togglePasswordVisibility","prevState","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","_LoginPage_styled__WEBPACK_IMPORTED_MODULE_9__","to","UrlService","signupPageUrl","this","autoComplete","placeholder","onChange","onBlur","isUsernameErrorShown","isPasswordErrorShown","onClick","disabled","isSubmitNotAllowed","areCredentialsInvalid","renderSignupLink","isSigninAttemptInProgress","React","PureComponent","mapStateToProps","createStructuredSelector","areCredentialsInvalidSelector","isSigninAttemptInProgressSelector","mapDispatchToProps","signinUserAttempt","withConnect","connect","compose"],"mappings":"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","file":"static/js/1.0187b71e.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","interface colorsPalette {\n  readonly colorMainText: string,\n  readonly colorGreyPopup: string,\n  readonly colorAntiMain: string,\n  readonly colorExtraText: string,\n  readonly colorAccent1: string,\n  readonly colorAccent2: string,\n  readonly colorAccent3: string,\n  readonly colorAccent4: string,\n  readonly colorInactive: string,\n  readonly colorBorder: string,\n  readonly colorBorderError: string,\n  readonly pageBackground: string,\n}\n\nexport const COLORS: colorsPalette = {\n  colorMainText: '#333333',\n  colorGreyPopup: '#d2d2d2',\n  colorAntiMain: '#ffffff',\n  colorExtraText: '#757575',\n  colorAccent1: '#7ceb7e',\n  colorAccent2: '#ff4a4a',\n  colorAccent3: '#f1970f',\n  colorAccent4: '#29a1fb',\n  colorInactive: '#c9c9c9',\n  colorBorder: '#dee1e4',\n  colorBorderError: '#df4930',\n  pageBackground: '#f5f6fa',\n};\n","import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\nexport const Tile = styled.section<{\n  withShadow?: boolean,\n  withRoundedCorners?: boolean,\n}>`\n  background-color: ${COLORS.colorAntiMain};\n  border-radius: ${({ withRoundedCorners }) => withRoundedCorners ? 15 : 0}px;\n  box-shadow: ${({ withShadow }) => withShadow ? '0 0 10px 0 rgba(90, 103, 121, 0.1)' : 'none'};\n`;\n\nexport const TileHeader = styled.header`\n  padding: 0 40px;\n  border-bottom: 1px solid ${COLORS.colorBorder};\n`;\n\nexport const TileBody = styled.main`\n  padding: 20px 40px;\n`;\n\n// @ts-ignore\nTile.defaultProps = {\n  withShadow: true,\n  withRoundedCorners: true,\n};\n","import styled from 'styled-components';\n\nimport { COLORS } from '../../constants/colors';\n\n\nexport const PageWrapper = styled.section`\n  padding: 20px 40px 60px;\n  background-color: ${COLORS.pageBackground};\n`;\n","export default class FormsValidatorService {\n  static emailValidator = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  static usernameValidator = /^[A-Za-z0-9]{1,20}$/;\n\n  public static isEmailValid(email: string): boolean {\n    return FormsValidatorService.emailValidator.test(email);\n  }\n\n  public static isUsernameValid(username: string): boolean {\n    return FormsValidatorService.usernameValidator.test(username);\n  }\n\n  public static isPasswordValid(password: string): boolean {\n    return password.length > 0 && password.length < 20;\n  }\n}\n","import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\nexport const TextFieldInput = styled.input<{\n  error: boolean,\n}>`\n  background-color: ${COLORS.colorAntiMain};\n  border: 1px solid ${props => props.error ? COLORS.colorBorderError : props.theme.borderColor};\n  border-radius: 3px;\n  padding: 12px 40px 12px 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { COLORS } from '../../constants/colors';\nimport { PageWrapper as CommonPageWrapper } from '../../components/CommonStyled/PageWrapper.styled';\nimport { TextFieldInput as CommonTextFieldInput } from '../../components/TextFieldInput/TextFieldInput.styled';\nimport { default as CommonShowPasswordEyeIcon } from '../../assets/icons/ShowPasswordEyeIcon';\nimport { Tile } from '../../components/CommonStyled/Tile.styled';\n\n\nexport const PageWrapper = styled(CommonPageWrapper)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const LoginFormWrapper = styled(Tile)`\n  overflow: hidden;\n`;\n\nexport const LoginFormContainer = styled.div`\n  padding: 30px 75px 15px;\n  background-color: ${COLORS.colorAntiMain};\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LoginFormHeader = styled.h2`\n  background-color: ${COLORS.colorAccent4};\n  color: ${COLORS.colorAntiMain};\n  font-weight: bold;\n  margin: 0;\n  padding: 22px;\n  text-align: center;\n`;\n\nexport const TextFieldLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  position:relative;\n  \n  p {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const LoginFormInput = styled(CommonTextFieldInput)`\n  font-size: 16px;\n  height: 40px;\n  padding: 12px 40px 12px 20px;\n  transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n              box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  width: 100%;\n`;\n\nexport const ErrorBlock = styled.div<{\n  visible: boolean,\n}>`\n  color: ${COLORS.colorAccent2};\n  font-size: 12px;\n  height: 30px;\n  line-height: 30px;\n  visibility: ${(props) => props.visible ? 'visible' : 'hidden'};\n`;\n\nexport const ShowPasswordEyeButton = styled.button`\n  bottom: 8px;\n  position: absolute;\n  right: 10px;\n`;\n\nexport const ShowPasswordEyeIcon = CommonShowPasswordEyeIcon;\n\nexport const SubmitButtonContainer = styled.div`\n  padding: 0 30px;\n  \n  &:hover {\n    filter: brightness(95%);\n  }\n`;\n\nexport const SubmitButton = styled.input`\n  background-color: ${COLORS.colorAccent4};\n  border-radius: 35px;\n  box-shadow: none;\n  color: ${COLORS.colorAntiMain};\n  cursor: pointer;\n  font-size: 16px;\n  height: 45px;\n  padding: 0 10px;\n  transition: all 0.25s ease;\n  width: 100%;\n  \n  &[disabled] {\n    background-color: ${COLORS.colorInactive};\n    cursor: not-allowed;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  align-self: flex-end;\n`;","import * as React from 'react';\n\nimport { COLORS } from '../../constants/colors';\n\n\nexport default function ShowPasswordEyeIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"16\" viewBox=\"0 0 22 16\">\n      <path fill={COLORS.colorAccent4} fillRule=\"nonzero\"\n            d=\"M11 .5C6 .5 1.73 3.61 0 8c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5C20.27 3.61 16 .5 11 .5zM11 13c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8C9.34 5 8 6.34 8 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n    </svg>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport FormsValidatorService from '../../services/FormsValidator.service';\nimport * as styled from './LoginPage.styled';\nimport { signinUserAttempt, signinUserAttemptActionCreator } from '../../store/userState/actions';\nimport { createStructuredSelector } from 'reselect';\nimport { areCredentialsInvalidSelector, isSigninAttemptInProgressSelector } from '../../store/userState/selectors';\nimport { RootReducer } from '../../store/rootReducer';\nimport UrlService from '../../services/Url.service';\n\n\ninterface LoginPageState {\n  username: string,\n  password: string,\n  usernameValid: boolean,\n  passwordValid: boolean,\n  usernameTouched: boolean,\n  passwordTouched: boolean,\n  passwordVisible: boolean,\n}\n\ninterface LoginPageOwnProps {\n  areCredentialsInvalid: boolean,\n  isSigninAttemptInProgress: boolean,\n}\n\ninterface LoginPageDispatchProps {\n  signinUser: signinUserAttemptActionCreator,\n}\n\ninterface LoginPageProps extends LoginPageOwnProps, LoginPageDispatchProps {\n}\n\nclass LoginPage extends React.PureComponent<LoginPageProps, LoginPageState> {\n  static propTypes = {\n    signinUser: PropTypes.func.isRequired,\n    areCredentialsInvalid: PropTypes.bool.isRequired,\n    isSigninAttemptInProgress: PropTypes.bool.isRequired,\n  };\n\n  state: LoginPageState = {\n    username: '',\n    password: '',\n    usernameValid: true,\n    passwordValid: true,\n    usernameTouched: false,\n    passwordTouched: false,\n    passwordVisible: false,\n  };\n\n  get isUsernameErrorShown() {\n    return !this.state.usernameValid && this.state.usernameTouched;\n  }\n\n  get isPasswordErrorShown() {\n    return !this.state.passwordValid && this.state.passwordTouched;\n  }\n\n  get isSubmitNotAllowed() {\n    return !this.state.usernameValid || !this.state.passwordValid || this.props.isSigninAttemptInProgress;\n  }\n\n  get areCredentialsInvalid() {\n    return this.props.areCredentialsInvalid && !this.state.passwordTouched && !this.state.usernameTouched;\n  }\n\n  onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!FormsValidatorService.isUsernameValid(this.state.username) || this.state.password.length === 0) {\n      this.setState({\n        usernameValid: FormsValidatorService.isUsernameValid(this.state.username),\n        passwordValid: this.state.password.length !== 0,\n        usernameTouched: true,\n        passwordTouched: true,\n      });\n    } else {\n      this.setState({\n        usernameTouched: false,\n        passwordTouched: false,\n      });\n      this.props.signinUser(this.state.username, this.state.password);\n    }\n  };\n\n  onUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onUsernameBlur = (e: React.FocusEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    password: e.target.value,\n    passwordValid: e.target.value.length !== 0,\n    passwordTouched: true,\n  });\n\n  onPasswordBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.target.type === 'password' || e.target.type === 'text') {\n      this.setState({\n        password: e.target.value,\n        passwordValid: e.target.value.length !== 0,\n        passwordTouched: true,\n      });\n    }\n  };\n\n  togglePasswordVisibility = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      passwordVisible: !prevState.passwordVisible,\n    }));\n  };\n\n  renderSignupLink() {\n    return (\n      <>\n        <styled.SignupLink to={UrlService.signupPageUrl}>\n          Create new account\n        </styled.SignupLink>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <styled.PageWrapper>\n        <styled.LoginFormWrapper>\n          <styled.LoginFormHeader>\n            Log in\n          </styled.LoginFormHeader>\n          <styled.LoginFormContainer>\n            <styled.LoginForm\n              onSubmit={this.onSubmit}\n            >\n              <styled.TextFieldLabel>\n                <p>Username</p>\n                <styled.LoginFormInput\n                  type=\"text\"\n                  autoComplete=\"username\"\n                  placeholder=\"Enter your username\"\n                  value={this.state.username}\n                  onChange={this.onUsernameChange}\n                  onBlur={this.onUsernameBlur}\n                  error={this.isUsernameErrorShown}\n                />\n              </styled.TextFieldLabel>\n              <styled.ErrorBlock\n                visible={this.isUsernameErrorShown}\n              >\n                ● wrong username\n              </styled.ErrorBlock>\n              <styled.TextFieldLabel>\n                <p>Password</p>\n                <styled.LoginFormInput\n                  type={this.state.passwordVisible ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  placeholder=\"Enter password\"\n                  value={this.state.password}\n                  error={this.isPasswordErrorShown}\n                  onChange={this.onPasswordChange}\n                  onBlur={this.onPasswordBlur}\n                />\n                <styled.ShowPasswordEyeButton onClick={this.togglePasswordVisibility}>\n                  <styled.ShowPasswordEyeIcon/>\n                </styled.ShowPasswordEyeButton>\n              </styled.TextFieldLabel>\n              <styled.ErrorBlock\n                visible={this.isPasswordErrorShown}\n              >\n                ● wrong password\n              </styled.ErrorBlock>\n              <styled.SubmitButtonContainer>\n                <styled.SubmitButton\n                  type=\"submit\"\n                  disabled={this.isSubmitNotAllowed}\n                  value=\"Log in\"\n                />\n              </styled.SubmitButtonContainer>\n              <styled.ErrorBlock\n                visible={this.areCredentialsInvalid}\n              >\n                ● wrong username or password\n              </styled.ErrorBlock>\n              {this.renderSignupLink()}\n            </styled.LoginForm>\n          </styled.LoginFormContainer>\n        </styled.LoginFormWrapper>\n      </styled.PageWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, LoginPageOwnProps>({\n  areCredentialsInvalid: areCredentialsInvalidSelector,\n  isSigninAttemptInProgress: isSigninAttemptInProgressSelector,\n});\n\nconst mapDispatchToProps = {\n  signinUser: signinUserAttempt,\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect,\n)(LoginPage);\n"],"sourceRoot":""}