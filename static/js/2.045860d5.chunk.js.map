{"version":3,"sources":["components/TextFieldInput/TextFieldInput.styled.ts","containers/LoginPage/LoginPage.styled.ts","assets/icons/ShowPasswordEyeIcon.tsx","services/FormsValidator.service.ts","containers/SignupPage/SignupPage.tsx"],"names":["TextFieldInput","styled","input","_templateObject","COLORS","colorAntiMain","props","error","colorBorderError","theme","borderColor","PageWrapper","CommonPageWrapper","LoginPage_styled_templateObject","LoginFormWrapper","Tile","_templateObject2","LoginFormContainer","div","_templateObject3","LoginForm","form","_templateObject4","LoginFormHeader","h2","_templateObject5","colorAccent4","TextFieldLabel","label","_templateObject6","LoginFormInput","CommonTextFieldInput","_templateObject7","ErrorBlock","_templateObject8","colorAccent2","visible","ShowPasswordEyeButton","button","_templateObject9","ShowPasswordEyeIcon","react","xmlns","width","height","viewBox","fill","fillRule","d","SubmitButtonContainer","_templateObject10","SubmitButton","_templateObject11","colorInactive","SignupLink","Link","_templateObject12","FormsValidatorService","email","emailValidator","test","username","usernameValidator","password","length","SignupPage","state","password1","password2","usernameValid","password1Valid","password2Valid","usernameTouched","password1Touched","password2Touched","password1Visible","password2Visible","isSignupSubmitted","isSignupSuccessfulMessageShown","onSubmit","e","preventDefault","isUsernameValid","_this","isPasswordValid","setState","signupUser","console","warn","onUsernameChange","target","value","onUsernameBlur","onPassword1Change","onPassword2Change","onPassword1Blur","onPassword2Blur","togglePassword1Visibility","prevState","togglePassword2Visibility","nextProps","nextContext","this","signupError","isSignupInProgress","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","_LoginPage_LoginPage_styled__WEBPACK_IMPORTED_MODULE_8__","type","autoComplete","placeholder","onChange","onBlur","isUsernameErrorShown","isPassword1ErrorShown","onClick","isPassword2ErrorShown","disabled","isSubmitNotAllowed","Boolean","renderUsername","renderPassword1","renderPassword2","renderSubmit","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","UrlService","loginPageUrl","renderSignupSuccessfulMessage","renderSignupForm","React","PureComponent","mapStateToProps","createStructuredSelector","selectors","mapDispatchToProps","signupUserAttempt","withConnect","connect","compose"],"mappings":"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","file":"static/js/2.045860d5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\nexport const TextFieldInput = styled.input<{\n  error: boolean,\n}>`\n  background-color: ${COLORS.colorAntiMain};\n  border: 1px solid ${props => props.error ? COLORS.colorBorderError : props.theme.borderColor};\n  border-radius: 3px;\n  padding: 12px 40px 12px 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { COLORS } from '../../constants/colors';\nimport { PageWrapper as CommonPageWrapper } from '../../components/CommonStyled/PageWrapper.styled';\nimport { TextFieldInput as CommonTextFieldInput } from '../../components/TextFieldInput/TextFieldInput.styled';\nimport { default as CommonShowPasswordEyeIcon } from '../../assets/icons/ShowPasswordEyeIcon';\nimport { Tile } from '../../components/CommonStyled/Tile.styled';\n\n\nexport const PageWrapper = styled(CommonPageWrapper)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const LoginFormWrapper = styled(Tile)`\n  overflow: hidden;\n`;\n\nexport const LoginFormContainer = styled.div`\n  padding: 30px 75px 15px;\n  background-color: ${COLORS.colorAntiMain};\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LoginFormHeader = styled.h2`\n  background-color: ${COLORS.colorAccent4};\n  color: ${COLORS.colorAntiMain};\n  font-weight: bold;\n  margin: 0;\n  padding: 22px;\n  text-align: center;\n`;\n\nexport const TextFieldLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  position:relative;\n  \n  p {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const LoginFormInput = styled(CommonTextFieldInput)`\n  font-size: 16px;\n  height: 40px;\n  padding: 12px 40px 12px 20px;\n  transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n              box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  width: 100%;\n`;\n\nexport const ErrorBlock = styled.div<{\n  visible: boolean,\n}>`\n  color: ${COLORS.colorAccent2};\n  font-size: 12px;\n  height: 30px;\n  line-height: 30px;\n  visibility: ${(props) => props.visible ? 'visible' : 'hidden'};\n`;\n\nexport const ShowPasswordEyeButton = styled.button`\n  bottom: 8px;\n  position: absolute;\n  right: 10px;\n`;\n\nexport const ShowPasswordEyeIcon = CommonShowPasswordEyeIcon;\n\nexport const SubmitButtonContainer = styled.div`\n  padding: 0 30px;\n  \n  &:hover {\n    filter: brightness(95%);\n  }\n`;\n\nexport const SubmitButton = styled.input`\n  background-color: ${COLORS.colorAccent4};\n  border-radius: 35px;\n  box-shadow: none;\n  color: ${COLORS.colorAntiMain};\n  cursor: pointer;\n  font-size: 16px;\n  height: 45px;\n  padding: 0 10px;\n  transition: all 0.25s ease;\n  width: 100%;\n  \n  &[disabled] {\n    background-color: ${COLORS.colorInactive};\n    cursor: not-allowed;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  align-self: flex-end;\n`;","import * as React from 'react';\n\nimport { COLORS } from '../../constants/colors';\n\n\nexport default function ShowPasswordEyeIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"16\" viewBox=\"0 0 22 16\">\n      <path fill={COLORS.colorAccent4} fillRule=\"nonzero\"\n            d=\"M11 .5C6 .5 1.73 3.61 0 8c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5C20.27 3.61 16 .5 11 .5zM11 13c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8C9.34 5 8 6.34 8 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n    </svg>\n  );\n}\n","export default class FormsValidatorService {\n  static emailValidator = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  static usernameValidator = /^[A-Za-z0-9]{1,20}$/;\n\n  public static isEmailValid(email: string): boolean {\n    return FormsValidatorService.emailValidator.test(email);\n  }\n\n  public static isUsernameValid(username: string): boolean {\n    return FormsValidatorService.usernameValidator.test(username);\n  }\n\n  public static isPasswordValid(password: string): boolean {\n    return password.length > 0 && password.length < 20;\n  }\n}\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as loginPageStyled from '../LoginPage/LoginPage.styled';\nimport UrlService from '../../services/Url.service';\nimport FormsValidatorService from '../../services/FormsValidator.service';\nimport {\n  signupUserAttempt,\n  signupUserAttemptActionCreator,\n} from '../../store/userState/actions';\nimport { createStructuredSelector } from 'reselect';\nimport { RootReducer } from '../../store/rootReducer';\nimport * as selectors from '../../store/userState/selectors';\nimport { Link } from 'react-router-dom';\n\n\ninterface SignupPageState {\n  username: string,\n  password1: string,\n  password2: string,\n  usernameValid: boolean,\n  password1Valid: boolean,\n  password2Valid: boolean,\n  usernameTouched: boolean,\n  password1Touched: boolean,\n  password2Touched: boolean,\n  password1Visible: boolean,\n  password2Visible: boolean,\n  isSignupSubmitted: boolean,\n  isSignupSuccessfulMessageShown: boolean,\n}\n\ninterface SignupPageOwnProps {\n  signupError: string | null,\n  isSignupInProgress: boolean,\n}\n\ninterface SignupPageDispatchProps {\n  signupUser: signupUserAttemptActionCreator,\n}\n\ninterface SignupPageProps extends SignupPageOwnProps, SignupPageDispatchProps {}\n\nclass SignupPage extends React.PureComponent<SignupPageProps, SignupPageState> {\n  static propTypes = {};\n\n  state: SignupPageState = {\n    username: '',\n    password1: '',\n    password2: '',\n    usernameValid: true,\n    password1Valid: true,\n    password2Valid: false,\n    usernameTouched: false,\n    password1Touched: false,\n    password2Touched: false,\n    password1Visible: false,\n    password2Visible: false,\n    isSignupSubmitted: false,\n    isSignupSuccessfulMessageShown: false,\n  };\n\n  componentWillReceiveProps(nextProps: Readonly<SignupPageProps>, nextContext: any): void {\n    const isSignupSubmitSuccessful = this.state.isSignupSubmitted && !nextProps.signupError && !nextProps.isSignupInProgress;\n    if (isSignupSubmitSuccessful) {\n      this.setState({ isSignupSuccessfulMessageShown: true });\n    }\n  }\n\n  get isUsernameErrorShown() {\n    return !this.state.usernameValid && this.state.usernameTouched;\n  }\n\n  get isPassword1ErrorShown() {\n    return !this.state.password1Valid && this.state.password1Touched;\n  }\n\n  get isPassword2ErrorShown() {\n    return !this.state.password2Valid && this.state.password2Touched;\n  }\n\n  get isSubmitNotAllowed() {\n    return !this.state.usernameValid || !this.state.password1Valid ||  !this.state.password2Valid || this.props.isSignupInProgress;\n  }\n\n  onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!FormsValidatorService.isUsernameValid(this.state.username) || !FormsValidatorService.isPasswordValid(this.state.password1)) {\n      console.warn('hmm, strange.. looks like this subtree is not reachable; kept to prevent bugs');\n      this.setState({\n        usernameValid: FormsValidatorService.isUsernameValid(this.state.username),\n        password1Valid: this.state.password1.length !== 0,\n        usernameTouched: true,\n        password1Touched: true,\n      });\n    } else {\n      this.setState({\n        usernameTouched: false,\n        password1Touched: false,\n        isSignupSubmitted: true,\n      });\n      this.props.signupUser(this.state.username, this.state.password1);\n    }\n  };\n\n  onUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onUsernameBlur = (e: React.FocusEvent<HTMLInputElement>) => this.setState({\n    username: e.target.value,\n    usernameValid: FormsValidatorService.isUsernameValid(e.target.value),\n    usernameTouched: true,\n  });\n\n  onPassword1Change = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    password1: e.target.value,\n    password1Valid: e.target.value.length !== 0,\n    password1Touched: true,\n  });\n\n  onPassword2Change = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({\n    password2: e.target.value,\n    password2Valid: e.target.value === this.state.password1,\n    password2Touched: true,\n  });\n\n  onPassword1Blur = (e: React.FocusEvent<HTMLInputElement>) => {\n    // if (e.target.type === 'password' || e.target.type === 'text') {\n      this.setState({\n        password1: e.target.value,\n        password1Valid: e.target.value.length !== 0,\n        password1Touched: true,\n      });\n    // }\n  };\n\n  onPassword2Blur = (e: React.FocusEvent<HTMLInputElement>) => {\n    // if (e.target.type === 'password' || e.target.type === 'text') {\n      this.setState({\n        password2: e.target.value,\n        password2Valid: e.target.value === this.state.password1,\n        password2Touched: true,\n      });\n    // }\n  };\n\n  togglePassword1Visibility = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      password1Visible: !prevState.password1Visible,\n    }))\n  };\n\n  togglePassword2Visibility = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      password2Visible: !prevState.password2Visible,\n    }))\n  };\n\n  private renderUsername() {\n    return (\n      <>\n        <loginPageStyled.TextFieldLabel>\n          <p>Username</p>\n          <loginPageStyled.LoginFormInput\n            type=\"text\"\n            autoComplete=\"username\"\n            placeholder=\"Enter your username\"\n            value={this.state.username}\n            onChange={this.onUsernameChange}\n            onBlur={this.onUsernameBlur}\n            error={this.isUsernameErrorShown}\n          />\n        </loginPageStyled.TextFieldLabel>\n        <loginPageStyled.ErrorBlock\n          visible={this.isUsernameErrorShown}\n        >\n          ● wrong username\n        </loginPageStyled.ErrorBlock>\n      </>\n    );\n  }\n\n  private renderPassword1() {\n    return (\n      <>\n        <loginPageStyled.TextFieldLabel>\n          <p>Password</p>\n          <loginPageStyled.LoginFormInput\n            type={this.state.password1Visible ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            placeholder=\"Enter password\"\n            value={this.state.password1}\n            error={this.isPassword1ErrorShown}\n            onChange={this.onPassword1Change}\n            onBlur={this.onPassword1Blur}\n          />\n          <loginPageStyled.ShowPasswordEyeButton onClick={this.togglePassword1Visibility}>\n            <loginPageStyled.ShowPasswordEyeIcon/>\n          </loginPageStyled.ShowPasswordEyeButton>\n        </loginPageStyled.TextFieldLabel>\n        <loginPageStyled.ErrorBlock\n          visible={this.isPassword1ErrorShown}\n        >\n          ● wrong password\n        </loginPageStyled.ErrorBlock>\n      </>\n    );\n  }\n\n  private renderPassword2() {\n    return (\n      <>\n        <loginPageStyled.TextFieldLabel>\n          <p>Repeat password</p>\n          <loginPageStyled.LoginFormInput\n            type={this.state.password2Visible ? 'text' : 'password'}\n            autoComplete=\"repeat-password\"\n            placeholder=\"Repeat password\"\n            value={this.state.password2}\n            error={this.isPassword2ErrorShown}\n            onChange={this.onPassword2Change}\n            onBlur={this.onPassword2Blur}\n          />\n          <loginPageStyled.ShowPasswordEyeButton onClick={this.togglePassword2Visibility}>\n            <loginPageStyled.ShowPasswordEyeIcon/>\n          </loginPageStyled.ShowPasswordEyeButton>\n        </loginPageStyled.TextFieldLabel>\n        <loginPageStyled.ErrorBlock\n          visible={this.isPassword2ErrorShown}\n        >\n          ● passwords do not match\n        </loginPageStyled.ErrorBlock>\n      </>\n    );\n  }\n\n  private renderSubmit() {\n    return (\n      <>\n        <loginPageStyled.SubmitButtonContainer>\n          <loginPageStyled.SubmitButton\n            type=\"submit\"\n            disabled={this.isSubmitNotAllowed}\n            value=\"Sign up\"\n          />\n        </loginPageStyled.SubmitButtonContainer>\n        <loginPageStyled.ErrorBlock\n          visible={Boolean(this.props.signupError)}\n        >\n          ● {this.props.signupError}\n        </loginPageStyled.ErrorBlock>\n      </>\n    );\n  }\n\n  private renderSignupForm() {\n    return (\n      <loginPageStyled.LoginForm\n        onSubmit={this.onSubmit}\n      >\n        {this.renderUsername()}\n        {this.renderPassword1()}\n        {this.renderPassword2()}\n        {this.renderSubmit()}\n      </loginPageStyled.LoginForm>\n    );\n  }\n\n  renderSignupSuccessfulMessage() {\n    return (\n      <>\n        <p>You've signed up successfully!</p>\n        <Link to={UrlService.loginPageUrl}>Log in</Link>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <loginPageStyled.PageWrapper>\n        <loginPageStyled.LoginFormWrapper>\n          <loginPageStyled.LoginFormHeader>\n            Sign up\n          </loginPageStyled.LoginFormHeader>\n          <loginPageStyled.LoginFormContainer>\n            {\n              this.state.isSignupSuccessfulMessageShown\n                ? this.renderSignupSuccessfulMessage()\n                : this.renderSignupForm()\n            }\n          </loginPageStyled.LoginFormContainer>\n        </loginPageStyled.LoginFormWrapper>\n      </loginPageStyled.PageWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, SignupPageOwnProps>({\n  signupError: selectors.signupErrorSelector,\n  isSignupInProgress: selectors.isSignupAttemptInProgressSelector,\n});\n\nconst mapDispatchToProps = {\n  signupUser: signupUserAttempt,\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect,\n)(SignupPage);\n"],"sourceRoot":""}