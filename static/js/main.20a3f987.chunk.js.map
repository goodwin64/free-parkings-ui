{"version":3,"sources":["containers/App/constants.ts","components/CommonStyled/commonStyled.ts","components/CommonStyled/PageWrapper.styled.ts","store/car/selectors.ts","services/Images.service.ts","components/Loader/Loader.tsx","containers/App/App.module.css","assets/images/findParking.png","assets/images/myAccount.svg","assets/images/drivers.png","assets/images/defaultUserIcon.svg","components/Loader/Loader.module.css","store/userState/reducer.ts","store/car/constants.ts","store/userState/selectors.ts","assets/audio/parking-found.mp3","store/userState/constants.ts","components/Header/Header.tsx","HOCs/ProtectedRoute.jsx","containers/App/App.tsx","serviceWorker.js","store/parkings/adapters.ts","constants/backend.ts","utils/serialize.ts","services/GeoLocation.service.ts","services/Authentication.service.ts","services/AudioService.ts","store/parkingSettings/saga.ts","store/parkings/saga.ts","services/LocalStorage.service.ts","store/userState/adapters.ts","store/userState/saga.ts","store/car/adapters.ts","store/car/saga.ts","store/allUsers/saga.ts","store/rootSaga.ts","containers/BaseConfigPage/BaseConfigReducer.ts","store/parkings/reducer.ts","store/car/reducer.ts","store/parkingSettings/reducer.ts","store/allUsers/reducer.ts","store/rootReducer.ts","store/history.ts","themes.styled.ts","index.tsx","store/configureStore.ts","store/allUsers/constants.ts","components/Header/Header.module.css","containers/BaseConfigPage/BaseConfigConstants.ts","store/userState/actions.ts","store/car/actions.ts","store/parkings/actions.ts","store/parkings/selectors.ts","containers/BaseConfigPage/BaseConfigSelectors.ts","store/parkingSettings/constants.ts","store/allUsers/actions.ts","components/CommonStyled/Tile.styled.ts","store/parkings/constants.ts","constants/colors.ts","services/Url.service.ts","store/parkingSettings/selectors.ts"],"names":["__webpack_require__","d","__webpack_exports__","INIT_USER_AUTH_INFO_ON_LOAD","INIT_USER_INFO_ON_LOAD","NOT_ALLOWED_WITH_GUEST_PERMISSION","USER_SIGN_IN_ATTEMPT","USER_SIGN_IN_SUCCESS","USER_SIGN_IN_ERROR","USER_SIGN_OUT_ATTEMPT","USER_SIGN_OUT_SUCCESS","USER_SIGN_OUT_ERROR","USER_SIGN_UP_ATTEMPT","USER_SIGN_UP_SUCCESS","USER_SIGN_UP_ERROR","_PageWrapper_styled__WEBPACK_IMPORTED_MODULE_0__","_Tile_styled__WEBPACK_IMPORTED_MODULE_1__","PageWrapper","styled","section","_templateObject","carInfoSelector","isCarInfoFullyFilledSelector","carManufacturersSelector","carPageIsInProgressSelector","carPageIsErrorSelector","carPageIsCachedSelector","reselect__WEBPACK_IMPORTED_MODULE_0__","state","car","carInfo","createSelector","Boolean","length","width","height","carManufacturers","isInProgress","isError","isCached","ImagesService","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","then","value","String","catch","err","commonImages","defaultUserIcon","driverImages","findParkings","myAccount","drivers","Loader","react__WEBPACK_IMPORTED_MODULE_5__","className","styles","React","module","exports","AppContainer","p","loader","load8","USER_ROLE_GUEST","USER_ROLE_ADMIN","USER_ROLE_DRIVER","USER_GENDER_NOT_APPLIED","POSSIBLE_GENDER_LIST","userInitialState","id","isLoginInProgress","isSignupInProgress","isLoginError","signupError","isAuthorized","role","imageUrl","username","fullname","defaultCountry","userReducer","arguments","undefined","action","type","Object","_home_travis_build_goodwin64_free_parkings_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","payload","gender","USER_UPDATE_AVATAR","USER_UPDATE_USERNAME","USER_UPDATE_FULLNAME","USER_UPDATE_GENDER","USER_UPDATE_DEFAULT_COUNTRY","LOAD_CAR_PARAMETERS_ATTEMPT","LOAD_CAR_PARAMETERS_SUCCESS","LOAD_CAR_PARAMETERS_ERROR","LOAD_CAR_PARAMETERS_RESET","UPDATE_CAR_PARAMETER_VALUE_ATTEMPT","UPDATE_CAR_PARAMETER_VALUE_SUCCESS","UPDATE_CAR_PARAMETER_VALUE_ERROR","LOAD_CAR_MANUFACTURERS_ATTEMPT","LOAD_CAR_MANUFACTURERS_SUCCESS","LOAD_CAR_MANUFACTURERS_ERROR","userInfoSelector","areCredentialsInvalidSelector","signupErrorSelector","isSigninAttemptInProgressSelector","isSignupAttemptInProgressSelector","isUserAuthorizedSelector","userAccessTokenSelector","usernameSelector","userIdSelector","avatarUrlSelector","user","accessToken","Header","react_default","a","createElement","react_router_dom","to","UrlService","detectPageByUserInfo","this","props","configPageUrl","loginPageUrl","onClick","userSignOut","src","alt","renderUserActionsDropdown","renderLogo","renderUserPanel","PureComponent","mapStateToProps","createStructuredSelector","mapDispatchToProps","userSignOutAttempt","withConnect","connect","compose","ProtectedRoute","_ref","Component","component","allowed","_ref$RedirectComponen","RedirectComponent","_ref$redirectPath","redirectPath","rest","objectWithoutProperties","react_router","assign","render","pathname","from","location","defaultProps","redirectComponent","LoginPage","lazy","e","bind","SignupPage","AllUsersPage","ParkingsPage","all","DashboardPage","UserSettingsPage","App","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","css","components_Header_Header","Suspense","fallback","commonStyled","HOCs_ProtectedRoute","path","isRouteAllowed","userInfo","loginPageRolesAllowed","signupPageUrl","signupPageRolesAllowed","parkingsPageUrl","parkingsPageRolesAllowed","dashboardPageUrl","dashboardPageRolesAllowed","settingsPageUrl","settingsPageRolesAllowed","allUsersPageUrl","allUsersPageRolesAllowed","exact","rootUrl","isUserAuthorized","window","hostname","match","prepareParkings","rawResponseParkings","preparedResponse","Array","isArray","map","prepareParkingSlot","parkingSlot","prepareParkingParametersFromClientToServer","rawParkingParameters","rawGeometry","parkingsGeoJsonSource","isLatLon","parkingLength","parkingWidth","parkingHeight","restParameters","geometry","rawParkingGeometry","parkingPoints","split","rawParkingPoint","_rawParkingPoint$spli","s","parseFloat","trim","_rawParkingPoint$spli2","slicedToArray","lat","lon","prepareUserInputParkingPoint","filter","isValidPoint","prepareUserInputParkingGeometry","objectSpread","pointGeometry","every","isFinite","backendEndpoint","serialize","obj","prefix","str","hasOwnProperty","k","v","push","encodeURIComponent","join","GeoLocation_service","getUserLocation","navigator","geolocation","getCurrentPosition","watchUserLocation","watchPosition","getUserLatLon","coords","latitude","longitude","requestToFreeParkingsAPI","checkStatus","response","status","parseJSON","json","url","options","_args","regenerator_default","wrap","_context","prev","next","select","sent","fetch","headers","Content-Type","access_token","abrupt","stop","_marked","parkingIsFoundPath","require","AudioService","startCheckingParkingUpdatesSaga","parkingVoiceNotification","defaultParkingSettingsSaga","checkParkingUpdatesTimer","isParkingAutoSearchEnabled","isParkingAutoSearchEnabledSelector","call","checkForParkingsUpdates","delay","saga_marked","stopCheckingParkingUpdatesSaga","preparedResponseParkings","areVoiceNotificationsEnabled","existingParkings","areThereNewParkings","_context2","areVoiceNotificationsEnabledSelector","parkingsSelectors","some","Audio","play","_marked2","_context3","takeLatest","parkingSettinsConstants","_marked3","fetchParkingsSaga","updateUrlLatLonSaga","synchronizeLatLonSaga","clearAllFreeSlotsSaga","clearVisibleFreeSlotsSaga","detectGeoLocationSaga","createParkingSaga","updateParkingSaga","postParkingSaga","deleteParkingSaga","defaultParkingsSaga","searchRadius","canFetchParkings","isDriver","searchQuery","centerCoordinatesSelector","searchRadiusSelector","MAX_SEARCH_RADIUS_TO_FETCH","put","ParkingsPageActions","t0","t1","radius","concat","t2","console","parkings_saga_marked","search","saga_marked2","_ref2","latFromUrl","lonFromUrl","latLonSelector","setParkingsPageCenter","saga_marked3","_context4","fetchParkingsRequest","_marked4","_context5","method","_marked5","_ref3","uid","_context6","sessionUidSelector","body","JSON","stringify","Accept","_marked6","_ref4","_context7","GeoLocationService","_marked7","preparedParkingParameters","createdParking","_context8","_marked8","_context9","_marked9","parking","_context10","parkingCreated","postParkingSuccess","isFree","postParkingError","_marked10","parkingId","_context11","_marked11","_context12","throttle","parkingsConstants","takeEvery","_marked12","updateUserInfoLocallySaga","LocalStorageService","userAuthInfoJSON","localStorage","getItem","parse","getUserInfo","info","setItem","removeItem","saveUserInfoRequiredForAuth","LocalStorage_service_marked","userInfoAdapter","loginInfo","name","personalInfo","surname","redirectToPageByRole","signinUserAttemptSaga","signinUserSuccessSaga","signoutUserSuccessSaga","signoutUserAttemptSaga","loadUserInfoByAccessToken","initUserInfoOnLoadSaga","signupUserAttemptSaga","signupUserSuccessSaga","updatePersonalInfoField","updateAvatarSaga","updateUsernameSaga","updateFullnameSaga","updateGenderSaga","updateDefaultCountrySaga","userState_saga_marked","_action$payload","password","signinUserSuccess","signinUserError","userState_saga_marked2","loadCarParametersAttempt","userState_saga_marked3","loadCarParametersReset","removeUserInfo","saga_marked4","userSignOutSuccess","saga_marked5","userId","initUserInfoOnLoad","saga_marked6","userInfoRequiredForAuth","getUserInfoRequiredForAuth","initUserAuthInfoOnLoad","saga_marked7","_action$payload2","errorData","errorMessage","signupUserSuccess","isString","message","signupUserError","saga_marked8","alert","saga_marked9","defineProperty","saga_marked10","saga_marked11","saga_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","defaultLoginPageSaga","mark","_context16","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","prepareCarInfo","rawCarInfo","isObject","loadCarDataIfAbsent","updateCarParameterValueSaga","loadCarManufacturers","defaultCarPageSaga","carPageIsCached","preparedCarInfo","loadCarParametersSuccess","loadCarParametersError","car_saga_marked","paramKey","paramValue","updateCarParameterValueSuccess","updateCarParameterValueError","car_saga_marked2","manufacturersList","loadCarManufacturersAttempt","loadCarManufacturersSuccess","loadCarManufacturersError","car_saga_marked3","car_saga_marked4","loadAllUsersSaga","setUserRoleSaga","defaultAllUsersSaga","allUsers","loadAllUsersSuccess","loadAllUsersError","allUsers_saga_marked","setUserRoleSuccess","setUserRoleError","allUsers_saga_marked2","constants","allUsers_saga_marked3","initSaga","rootSaga_marked","BaseConfigInitialState","parkingSearchRadius","BaseConfigConstants","startPointLat","startPointLon","defaultZoomLevel","sessionUid","Math","random","slice","isSidebarOpen","baseConfigReducer","ParkingsPageInitialState","centerLat","centerLon","zoomLevel","lastParkingsCheckTimestamp","lastParkingsCheckUpdatesCount","isFetchInProgress","wasFetchPerformed","busyParkings","freeParkings","reducer","CHANGE_CENTER_LOCATION","CHANGE_ZOOM_LEVEL","PARKINGS_REQUEST_FOR_FETCH","PARKINGS_FETCH_START","PARKINGS_FETCH_SUCCESS","uniqBy","toConsumableArray","POST_PARKING_ATTEMPT","POST_PARKING_SUCCESS","isFreeNow","CHECK_PARKINGS_UPDATES_SUCCESS","timestamp","updatesCount","DELETE_PARKING","DELETE_ALL_FREE_SLOTS","carPageInitialState","carPageReducer","parkingSettingsInitialState","parkingSettingsReducer","allUsersPageInitialState","users","allUsersReducer","LOAD_ALL_USERS_ATTEMPT","LOAD_ALL_USERS_SUCCESS","LOAD_ALL_USERS_ERROR","SET_USER_ROLE_SUCCESS","userIndex","findIndex","updatedUser","updatedUsersList","setWith","clone","createRootReducer","history","combineReducers","router","connectRouter","config","parkingsPage","parkingsPageReducer","parkingSettings","createBrowserHistory","lightTheme","borderColor","store","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","run","initialSaga","configureStore","ReactDOM","es","esm","styled_components_browser_esm","theme","containers_App_App","document","getElementById","serviceWorker","ready","registration","unregister","SET_USER_ROLE_ATTEMPT","SET_USER_ROLE_ERROR","HeaderContainer","HeaderLogo","HeaderLogoFull","HeaderUserPanel","HeaderUserPanelAvatar","HeaderUserActionsDropdownList","HeaderUserActionsDropdownListDivider","HeaderUserActionsDropdownLink","BASE_CONFIG_RADIUS_SET","BASE_CONFIG_RADIUS_RESET","BASE_CONFIG_OPEN_SIDEBAR","BASE_CONFIG_CLOSE_SIDEBAR","INITIAL_SEARCH_RADIUS","KYIV_CENTER_LAT","KYIV_CENTER_LON","DEFAULT_ZOOM_LEVEL","signinUserAttempt","signupUserAttempt","updateAvatar","updateUsername","updateFullname","updateGender","updateDefaultCountry","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","_containers_App_constants__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","userAuthInfo","avatarUrl","country","updateCarParameterValueAttempt","_constants__WEBPACK_IMPORTED_MODULE_1__","setZoomLevel","fetchParkingsStart","synchronizeLatLon","fetchParkingsSuccess","checkParkingUpdatesRequest","postParkingAttempt","deleteParking","deleteAllFreeSlots","deleteVisibleFreeSlots","askPermissionForGeoLocation","SYNCHRONIZE_LAT_LON","parkings","CHECK_PARKINGS_UPDATES_REQUEST","POST_PARKING_ERROR","DELETE_VISIBLE_FREE_SLOTS","ASK_PERMISSION_FOR_GEO_LOCATION","routeParamsSelector","params","decodeURI","reduce","currPair","_currPair$split","_currPair$split2","_home_travis_build_goodwin64_free_parkings_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_goodwin64_free_parkings_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_goodwin64_free_parkings_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","defaultLatLonSelector","defaultLatLon","Number","zoomLevelSelector","parkingsPageDomainSelector","busyParkingsSelector","parkingsPageDomain","freeParkingsSelector","allParkingsSelector","_home_travis_build_goodwin64_free_parkings_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","isParkingFetchInProgressSelector","wasFetchPerformedSelector","centerCoordinatesLatitudeSelector","centerCoordinates","centerCoordinatesLongitudeSelector","selectedParkingSelector","_","routerProps","allParkings","selectedParkingId","find","isSearchRadiusTooBigSelector","isSidebarOpenSelector","_BaseConfigConstants__WEBPACK_IMPORTED_MODULE_1__","configDomainSelector","configDomain","SET_VOICE_NOTIFICATIONS","START_CHECKING_PARKING_UPDATES","STOP_CHECKING_PARKING_UPDATES","SET_CHECKING_PARKING_UPDATES","loadAllUsersAttempt","setUserRoleAttempt","Tile","COLORS","colorAntiMain","withRoundedCorners","withShadow","TileHeader","header","_templateObject2","colorBorder","TileBody","main","_templateObject3","colorMainText","colorGreyPopup","colorExtraText","colorAccent1","colorAccent2","colorAccent3","colorAccent4","colorInactive","colorBorderError","pageBackground","Set","configPageRolesAllowed","findParkingsPageUrl","findParkingsPageRolesAllowed","createParkingPageUrl","editParkingPageUrl","editParkingPageUrlWithParams","editParkingPageUrlRoute","routeRolesAllowed","has"],"mappings":"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","file":"static/js/main.20a3f987.chunk.js","sourcesContent":["export const INIT_USER_AUTH_INFO_ON_LOAD = 'INIT_USER_AUTH_INFO_ON_LOAD';\nexport const INIT_USER_INFO_ON_LOAD = 'INIT_USER_INFO_ON_LOAD';\nexport const NOT_ALLOWED_WITH_GUEST_PERMISSION = 'NOT_ALLOWED_WITH_GUEST_PERMISSION';\n\nexport const USER_SIGN_IN_ATTEMPT = 'USER_SIGN_IN_ATTEMPT';\nexport const USER_SIGN_IN_SUCCESS = 'USER_SIGN_IN_SUCCESS';\nexport const USER_SIGN_IN_ERROR = 'USER_SIGN_IN_ERROR';\n\nexport const USER_SIGN_OUT_ATTEMPT = 'USER_SIGN_OUT_ATTEMPT';\nexport const USER_SIGN_OUT_SUCCESS = 'USER_SIGN_OUT_SUCCESS';\nexport const USER_SIGN_OUT_ERROR = 'USER_SIGN_OUT_ERROR';\n\nexport const USER_SIGN_UP_ATTEMPT = 'USER_SIGN_UP_ATTEMPT';\nexport const USER_SIGN_UP_SUCCESS = 'USER_SIGN_UP_SUCCESS';\nexport const USER_SIGN_UP_ERROR = 'USER_SIGN_UP_ERROR';\n","import { PageWrapper } from './PageWrapper.styled';\nimport { Tile, TileHeader, TileBody } from './Tile.styled';\n\n\nexport {\n  PageWrapper,\n  Tile,\n  TileHeader,\n  TileBody,\n};\n","import styled from 'styled-components';\n\n\nexport const PageWrapper = styled.section`\n  padding: 40px 40px 60px;\n  background: #cdcdff;\n  background: -webkit-linear-gradient(45deg, #cdcdff, #ffdcf3);\n`;\n","import { RootReducer } from '../rootReducer';\nimport { createSelector } from 'reselect';\n\nexport const carInfoSelector = (state: RootReducer) => state.car.carInfo;\n\nexport const isCarInfoFullyFilledSelector = createSelector(\n  [carInfoSelector],\n  carInfo => Boolean(carInfo.length && carInfo.width && carInfo.height),\n);\n\nexport const carManufacturersSelector = (state: RootReducer) => state.car.carManufacturers;\n\nexport const carPageIsInProgressSelector = (state: RootReducer) => state.car.isInProgress;\nexport const carPageIsErrorSelector = (state: RootReducer) => state.car.isError;\nexport const carPageIsCachedSelector = (state: RootReducer) => state.car.isCached;\n","import findParkings from '../assets/images/findParking.png';\nimport myAccount from '../assets/images/myAccount.svg';\nimport drivers from '../assets/images/drivers.png';\nimport defaultUserIcon from '../assets/images/defaultUserIcon.svg';\n\n\nexport default class ImagesService {\n  public static commonImages = {\n    defaultUserIcon,\n  };\n\n  public static driverImages = {\n    findParkings,\n    myAccount,\n    drivers,\n  };\n\n  public static getBase64(file?: File): Promise<string> {\n    if (!file) {\n      return Promise.resolve('');\n    }\n\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      // @ts-ignore\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    })\n      .then(value => value ? String(value) : '')\n      .catch(err => String(err));\n  };\n}\n","import * as React from 'react';\n\nimport * as styles from './Loader.module.css';\n\nclass Loader extends React.PureComponent {\n  render() {\n    return (\n      <div className={styles['loader']}>Loading...</div>\n    );\n  }\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__1nBhh\"};","module.exports = __webpack_public_path__ + \"static/media/findParking.00c2ce8e.png\";","module.exports = __webpack_public_path__ + \"static/media/myAccount.56343e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/drivers.e5e1fefe.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultUserIcon.98e63c1e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3ZbKj\",\"load8\":\"Loader_load8__tO1dv\"};","import { UserAction } from './actions';\nimport {\n  INIT_USER_AUTH_INFO_ON_LOAD,\n  INIT_USER_INFO_ON_LOAD,\n  USER_SIGN_IN_ATTEMPT,\n  USER_SIGN_IN_ERROR,\n  USER_SIGN_IN_SUCCESS,\n  USER_SIGN_OUT_SUCCESS,\n  USER_SIGN_UP_ATTEMPT,\n  USER_SIGN_UP_ERROR,\n  USER_SIGN_UP_SUCCESS,\n} from '../../containers/App/constants';\nimport {\n  USER_UPDATE_AVATAR,\n  USER_UPDATE_DEFAULT_COUNTRY,\n  USER_UPDATE_FULLNAME,\n  USER_UPDATE_GENDER,\n  USER_UPDATE_USERNAME,\n} from './constants';\nimport { UserInfo } from '../../interfaces/UserInfo';\n\n\nexport const USER_ROLE_GUEST = 'GUEST';\nexport const USER_ROLE_ADMIN = 'ADMIN';\nexport const USER_ROLE_DRIVER = 'DRIVER';\n\nexport const USER_GENDER_MALE = 'male';\nexport const USER_GENDER_FEMALE = 'female';\nexport const USER_GENDER_NOT_APPLIED = 'n/a';\n\nexport const POSSIBLE_GENDER_LIST = [\n  USER_GENDER_MALE,\n  USER_GENDER_FEMALE,\n  USER_GENDER_NOT_APPLIED,\n];\n\nexport const userInitialState: UserInfo = {\n  id: '-1',\n  isLoginInProgress: false,\n  isSignupInProgress: false,\n  isLoginError: false,\n  signupError: null,\n  isAuthorized: false,\n  role: USER_ROLE_GUEST,\n  imageUrl: 'https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png',\n  username: 'default username',\n  fullname: '',\n  defaultCountry: '',\n};\n\nexport default function userReducer(\n  state: UserInfo = userInitialState,\n  action: UserAction,\n): UserInfo {\n  switch (action.type) {\n    case INIT_USER_AUTH_INFO_ON_LOAD: {\n      return {\n        ...state,\n        ...action.payload,\n        isAuthorized: true,\n      };\n    }\n    case INIT_USER_INFO_ON_LOAD: {\n      return {\n        ...state,\n        ...action.payload,\n        isAuthorized: true,\n      };\n    }\n    case USER_SIGN_IN_ATTEMPT: {\n      return {\n        ...state,\n        isLoginInProgress: true,\n        isLoginError: false,\n      };\n    }\n    case USER_SIGN_IN_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n        isLoginInProgress: false,\n        isLoginError: false,\n        isAuthorized: true,\n      };\n    }\n    case USER_SIGN_IN_ERROR: {\n      return {\n        ...state,\n        isLoginInProgress: false,\n        isLoginError: true,\n        isAuthorized: false,\n        imageUrl: userInitialState.imageUrl,\n        username: userInitialState.username,\n        gender: userInitialState.gender,\n      };\n    }\n    case USER_SIGN_OUT_SUCCESS: {\n      return userInitialState;\n    }\n    case USER_SIGN_UP_ATTEMPT: {\n      return {\n        ...state,\n        isSignupInProgress: true,\n        signupError: null,\n      };\n    }\n    case USER_SIGN_UP_SUCCESS: {\n      return {\n        ...state,\n        isSignupInProgress: false,\n        signupError: null,\n      };\n    }\n    case USER_SIGN_UP_ERROR: {\n      return {\n        ...state,\n        isSignupInProgress: false,\n        signupError: action.payload.signupError,\n      };\n    }\n    case USER_UPDATE_AVATAR: {\n      return {\n        ...state,\n        imageUrl: action.payload,\n      };\n    }\n    case USER_UPDATE_USERNAME: {\n      return {\n        ...state,\n        username: action.payload,\n      };\n    }\n    case USER_UPDATE_FULLNAME: {\n      return {\n        ...state,\n        fullname: action.payload,\n      };\n    }\n    case USER_UPDATE_GENDER: {\n      return {\n        ...state,\n        gender: action.payload,\n      };\n    }\n    case USER_UPDATE_DEFAULT_COUNTRY: {\n      return {\n        ...state,\n        defaultCountry: action.payload,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","export const LOAD_CAR_PARAMETERS_ATTEMPT = 'LOAD_CAR_PARAMETERS_ATTEMPT';\nexport const LOAD_CAR_PARAMETERS_SUCCESS = 'LOAD_CAR_PARAMETERS_SUCCESS';\nexport const LOAD_CAR_PARAMETERS_ERROR = 'LOAD_CAR_PARAMETERS_ERROR';\nexport const LOAD_CAR_PARAMETERS_RESET = 'LOAD_CAR_PARAMETERS_RESET';\n\nexport const UPDATE_CAR_PARAMETER_VALUE_ATTEMPT = 'UPDATE_CAR_PARAMETER_VALUE_ATTEMPT';\nexport const UPDATE_CAR_PARAMETER_VALUE_SUCCESS = 'UPDATE_CAR_PARAMETER_VALUE_SUCCESS';\nexport const UPDATE_CAR_PARAMETER_VALUE_ERROR = 'UPDATE_CAR_PARAMETER_VALUE_ERROR';\n\nexport const LOAD_CAR_MANUFACTURERS_ATTEMPT = 'LOAD_CAR_MANUFACTURERS_ATTEMPT';\nexport const LOAD_CAR_MANUFACTURERS_SUCCESS = 'LOAD_CAR_MANUFACTURERS_SUCCESS';\nexport const LOAD_CAR_MANUFACTURERS_ERROR = 'LOAD_CAR_MANUFACTURERS_ERROR';\n","import { RootReducer } from '../rootReducer';\n\nexport const userInfoSelector = (state: RootReducer) => state.user;\n\nexport const areCredentialsInvalidSelector = (state: RootReducer) => state.user.isLoginError;\n\nexport const signupErrorSelector = (state: RootReducer) => state.user.signupError;\n\nexport const isSigninAttemptInProgressSelector = (state: RootReducer) => state.user.isLoginInProgress;\n\nexport const isSignupAttemptInProgressSelector = (state: RootReducer) => state.user.isSignupInProgress;\n\nexport const isUserAuthorizedSelector = (state: RootReducer) => state.user.isAuthorized;\n\nexport const userAccessTokenSelector = (state: RootReducer) => state.user.accessToken;\n\nexport const usernameSelector = (state: RootReducer) => state.user.username;\n\nexport const userIdSelector = (state: RootReducer) => state.user.id;\n\nexport const avatarUrlSelector = (state: RootReducer) => state.user.imageUrl;\n","module.exports = __webpack_public_path__ + \"static/media/parking-found.57a4105f.mp3\";","export const USER_UPDATE_AVATAR = 'USER_UPDATE_AVATAR';\nexport const USER_UPDATE_USERNAME = 'USER_UPDATE_USERNAME';\nexport const USER_UPDATE_FULLNAME = 'USER_UPDATE_FULLNAME';\nexport const USER_UPDATE_GENDER = 'USER_UPDATE_GENDER';\nexport const USER_UPDATE_DEFAULT_COUNTRY = 'USER_UPDATE_DEFAULT_COUNTRY';\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\n\nimport { userInfoSelector } from '../../store/userState/selectors';\nimport { RootReducer } from '../../store/rootReducer';\nimport * as styles from './Header.module.css';\nimport UrlService from '../../services/Url.service';\nimport { UserInfo } from '../../interfaces/UserInfo';\nimport { userSignOutAttempt, userSignOutAttemptActionCreator } from '../../store/userState/actions';\nimport ImagesService from '../../services/Images.service';\n\n\ninterface HeaderOwnProps {\n  user: UserInfo,\n}\n\ninterface HeaderDispatchProps {\n  userSignOut: userSignOutAttemptActionCreator,\n}\n\ninterface HeaderProps extends HeaderOwnProps, HeaderDispatchProps {}\n\ninterface HeaderLocalState {}\n\nclass Header extends React.PureComponent<HeaderProps, HeaderLocalState> {\n  renderLogo() {\n    return (\n      <Link to={UrlService.detectPageByUserInfo(this.props.user)}>\n        <h1 className={styles['HeaderLogo']}>\n          F<span className={styles['HeaderLogoFull']}>ree</span>\n          {' '}\n          P<span className={styles['HeaderLogoFull']}>arkings</span>\n        </h1>\n      </Link>\n    );\n  }\n\n  renderUserActionsDropdown() {\n    return (\n      <ul\n        className={styles['HeaderUserActionsDropdownList']}\n      >\n        <li>\n          <Link\n            to={'#'}\n            className={styles['HeaderUserActionsDropdownLink']}\n          >\n            About\n          </Link>\n        </li>\n\n        <li>\n          <Link\n            to={UrlService.configPageUrl}\n            className={styles['HeaderUserActionsDropdownLink']}\n          >\n            Settings\n          </Link>\n        </li>\n\n        <hr className={styles['HeaderUserActionsDropdownListDivider']} />\n\n        <li\n          className={styles['HeaderUserActionsDropdownItem']}\n        >\n          <Link\n            to={UrlService.loginPageUrl}\n            onClick={this.props.userSignOut}\n            className={styles['HeaderUserActionsDropdownLink']}\n          >\n            Logout\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  renderUserPanel() {\n    if (!this.props.user.isAuthorized) {\n      return null;\n    }\n\n    return (\n      <section className={styles['HeaderUserPanel']}>\n        <img\n          src={this.props.user.imageUrl || ImagesService.commonImages.defaultUserIcon}\n          alt=\"Avatar\"\n          className={styles['HeaderUserPanelAvatar']}\n        />\n        {this.renderUserActionsDropdown()}\n      </section>\n    );\n  }\n\n  render() {\n    return (\n      <header className={styles['HeaderContainer']}>\n        { this.renderLogo() }\n        { this.renderUserPanel() }\n      </header>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, HeaderOwnProps>({\n  user: userInfoSelector,\n});\n\nconst mapDispatchToProps = {\n  userSignOut: userSignOutAttempt,\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect,\n)(Header);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\nimport UrlService from '../services/Url.service';\n\n\nconst ProtectedRoute = ({ component: Component, allowed, RedirectComponent = null, redirectPath = '', ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      allowed\n        ? <Component {...props} />\n        : RedirectComponent ? <RedirectComponent/> : (\n          <Redirect\n            to={{\n              pathname: redirectPath,\n              state: { from: props.location },\n            }}\n          />\n        )\n    }\n  />\n);\n\nProtectedRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  allowed: PropTypes.bool.isRequired,\n  redirectPath: PropTypes.string,\n  redirectComponent: PropTypes.any,\n  location: PropTypes.object,\n};\n\nProtectedRoute.defaultProps = {\n  redirectPath: UrlService.loginPageUrl,\n  redirectComponent: null,\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Switch } from 'react-router';\nimport { createStructuredSelector } from 'reselect';\n\nimport * as css from './App.module.css';\nimport Header from '../../components/Header/Header';\nimport Loader from '../../components/Loader/Loader';\nimport UrlService from '../../services/Url.service';\nimport ProtectedRoute from '../../HOCs/ProtectedRoute';\nimport { isUserAuthorizedSelector, userInfoSelector } from '../../store/userState/selectors';\nimport { RootReducer } from '../../store/rootReducer';\nimport { UserInfo } from '../../interfaces/UserInfo';\nimport { PageWrapper } from '../../components/CommonStyled/commonStyled';\n\nconst LoginPage = React.lazy(() => import('../LoginPage/LoginPage'));\nconst SignupPage = React.lazy(() => import('../SignupPage/SignupPage'));\nconst AllUsersPage = React.lazy(() => import('../AllUsersPage/AllUsersPage'));\nconst ParkingsPage = React.lazy(() => import('../ParkingsPage/ParkingsPage'));\nconst DashboardPage = React.lazy(() => import('../DashboardPage/DashboardPage'));\nconst UserSettingsPage = React.lazy(() => import('../UserSettingsPage/UserSettingsPage'));\n\n\ninterface AppProps {\n  isUserAuthorized: boolean,\n  userInfo: UserInfo,\n}\n\nexport class App extends React.Component<AppProps> {\n  render() {\n    return (\n      <main className={css['AppContainer']}>\n        <Header/>\n        <React.Suspense fallback={<PageWrapper><Loader/></PageWrapper>}>\n          <Switch>\n            <ProtectedRoute\n              path={UrlService.loginPageUrl}\n              component={LoginPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.loginPageRolesAllowed)}\n              redirectPath={UrlService.detectPageByUserInfo(this.props.userInfo)}\n            />\n            <ProtectedRoute\n              path={UrlService.signupPageUrl}\n              component={SignupPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.signupPageRolesAllowed)}\n              RedirectComponent={LoginPage}\n            />\n            <ProtectedRoute\n              path={UrlService.parkingsPageUrl}\n              component={ParkingsPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.parkingsPageRolesAllowed)}\n              RedirectComponent={LoginPage}\n            />\n            <ProtectedRoute\n              path={UrlService.dashboardPageUrl}\n              component={DashboardPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.dashboardPageRolesAllowed)}\n              RedirectComponent={LoginPage}\n            />\n            <ProtectedRoute\n              path={UrlService.settingsPageUrl}\n              component={UserSettingsPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.settingsPageRolesAllowed)}\n              RedirectComponent={LoginPage}\n            />\n            <ProtectedRoute\n              path={UrlService.allUsersPageUrl}\n              component={AllUsersPage}\n              allowed={UrlService.isRouteAllowed(this.props.userInfo, UrlService.allUsersPageRolesAllowed)}\n              RedirectComponent={LoginPage}\n            />\n            <Redirect\n              exact\n              path=\"/\"\n              to={UrlService.detectPageByUserInfo(this.props.userInfo)}\n            />\n            <Redirect\n              exact\n              path={UrlService.rootUrl}\n              to={UrlService.detectPageByUserInfo(this.props.userInfo)}\n            />\n          </Switch>\n        </React.Suspense>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector<RootReducer, AppProps>({\n  userInfo: userInfoSelector,\n  isUserAuthorized: isUserAuthorizedSelector,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ClientParking,\n  Parking,\n  ParkingServerExpects,\n} from '../../interfaces/Parking';\nimport { PointGeometry } from '../../interfaces/PointGeometry';\nimport { ResponseParking } from '../../interfaces/Parking';\nimport { PreparedParkings, ResponseParkings } from '../../interfaces/ResponseParkings';\n\n\nexport function prepareParkings(\n  rawResponseParkings?: ResponseParkings\n): PreparedParkings {\n  let preparedResponse: PreparedParkings = [];\n\n  if (!rawResponseParkings || !Array.isArray(rawResponseParkings)) {\n    return preparedResponse;\n  }\n\n  preparedResponse = prepareParkingParkings(rawResponseParkings);\n\n  return preparedResponse;\n}\n\nfunction prepareParkingParkings(allParkings: ResponseParking[]): Parking[] {\n  return allParkings.map(prepareParkingSlot);\n}\n\nfunction prepareParkingSlot(parkingSlot: ResponseParking): Parking {\n  return parkingSlot;\n}\n\n\nexport function prepareParkingParametersFromClientToServer(rawParkingParameters: ClientParking): ParkingServerExpects {\n  const {\n    parkingsGeoJsonSource: rawGeometry,\n    isLatLon,\n    parkingLength: length,\n    parkingWidth: width,\n    parkingHeight: height,\n    ...restParameters\n  } = rawParkingParameters;\n  const geometry = prepareUserInputParkingGeometry(rawGeometry, isLatLon);\n\n  return {\n    ...restParameters,\n    geometry,\n    length,\n    width,\n    height,\n  }\n}\n\nexport function prepareUserInputParkingGeometry(rawParkingGeometry: string, isLatLon: boolean): PointGeometry[] {\n  const parkingPoints = rawParkingGeometry\n    .split('\\n')\n    .map(p => prepareUserInputParkingPoint(p, isLatLon))\n    .filter(isValidPoint)\n  ;\n\n  if (parkingPoints.length < 2) {\n    return [];\n  }\n  return parkingPoints;\n}\n\nfunction prepareUserInputParkingPoint(rawParkingPoint: string, isLatLon: boolean): PointGeometry {\n  const [lat, lon] = rawParkingPoint\n    .split(',')\n    .map(s => parseFloat(s.trim()))\n  ;\n  return isLatLon ? [lat, lon] : [lon, lat];\n}\n\nfunction isValidPoint(pointGeometry: PointGeometry) {\n  return Array.isArray(pointGeometry) && pointGeometry.length === 2 && pointGeometry.every(isFinite);\n}\n","export const backendEndpoint = (\n  process.env.NODE_ENV === 'production'\n    ? 'https://free-parkings-api.herokuapp.com'\n    : 'http://localhost:8000'\n);\n","export default function serialize(obj: any, prefix?: string): string {\n  let str = [];\n  let p;\n  for (p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      const k = prefix\n        ? prefix + '[' + p + ']'\n        : p;\n      const v = obj[p];\n      str.push(\n        (v !== null && typeof v === \"object\")\n          ? serialize(v, k)\n          : encodeURIComponent(k) + \"=\" + encodeURIComponent(v)\n      );\n    }\n  }\n  return str.join(\"&\");\n}\n","const getUserLocation = () => new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(\n    location => resolve(location),\n    error => reject(error),\n  )\n});\n\nconst watchUserLocation = () => new Promise((resolve, reject) => {\n  navigator.geolocation.watchPosition(\n    location => resolve(location),\n    error => reject(error),\n  )\n});\n\nexport default {\n  getUserLocation,\n  watchUserLocation,\n  getUserLatLon: (location: Position) => ({\n    lat: location.coords.latitude,\n    lon: location.coords.longitude,\n  }),\n};\n","import { select } from 'redux-saga/effects';\n\nimport { userAccessTokenSelector } from '../store/userState/selectors';\n\n\nfunction checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  throw response;\n}\n\nfunction parseJSON(response: Response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\nexport function request(url: string, options: RequestInit = {}, json: boolean = true) {\n  const promise = fetch(url, options).then(checkStatus);\n  return json ? promise.then(parseJSON) : promise;\n}\n\nexport function* requestToFreeParkingsAPI(url: string, options: RequestInit = {}) {\n  const accessToken = yield select(userAccessTokenSelector);\n\n  const response = yield fetch(url, {\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      ...accessToken ? {'access_token': accessToken} : {},\n    },\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n  ;\n  return response;\n}\n","const parkingIsFoundPath = require('../assets/audio/parking-found.mp3');\n\n\nexport default class AudioService {\n  static parkingIsFoundPath: string = parkingIsFoundPath;\n}\n","import some from 'lodash/some';\nimport { delay } from 'redux-saga';\nimport { all, call, select, takeLatest } from 'redux-saga/effects';\n\nimport * as parkingSettinsConstants from './constants';\nimport { checkForParkingsUpdates } from '../parkings/saga';\nimport { PreparedParkings } from '../../interfaces/ResponseParkings';\nimport { Parking } from '../../interfaces/Parking';\nimport * as parkingsSelectors from '../parkings/selectors';\nimport { areVoiceNotificationsEnabledSelector, isParkingAutoSearchEnabledSelector } from './selectors';\nimport AudioService from '../../services/AudioService';\n\n\nlet checkParkingUpdatesTimer: boolean = false;\nfunction* startCheckingParkingUpdatesSaga() {\n  const isParkingAutoSearchEnabled = yield select(isParkingAutoSearchEnabledSelector);\n  checkParkingUpdatesTimer = true;\n  while (checkParkingUpdatesTimer && isParkingAutoSearchEnabled) {\n    yield call(checkForParkingsUpdates);\n    yield delay(5000);\n  }\n}\n\nfunction stopCheckingParkingUpdatesSaga() {\n  checkParkingUpdatesTimer = false;\n}\n\nexport function* parkingVoiceNotification(preparedResponseParkings: PreparedParkings) {\n  const areVoiceNotificationsEnabled = yield select(areVoiceNotificationsEnabledSelector);\n  const existingParkings: Parking[] = yield select(parkingsSelectors.allParkingsSelector);\n  const areThereNewParkings = some(preparedResponseParkings, ({ id }) => existingParkings.every(p => p.id !== id));\n  if (areVoiceNotificationsEnabled && areThereNewParkings) {\n    new Audio(AudioService.parkingIsFoundPath).play();\n  }\n}\n\nexport default function* defaultParkingSettingsSaga() {\n  yield all([\n    takeLatest(parkingSettinsConstants.START_CHECKING_PARKING_UPDATES, startCheckingParkingUpdatesSaga),\n    takeLatest(parkingSettinsConstants.STOP_CHECKING_PARKING_UPDATES, stopCheckingParkingUpdatesSaga),\n  ]);\n}\n","import { push } from 'connected-react-router';\nimport { all, call, put, select, takeEvery, takeLatest, throttle } from 'redux-saga/effects';\n\nimport { centerCoordinatesSelector, latLonSelector } from './selectors';\nimport { prepareParkingParametersFromClientToServer, prepareParkings } from './adapters';\nimport { searchRadiusSelector, sessionUidSelector } from '../../containers/BaseConfigPage/BaseConfigSelectors';\nimport { PreparedParkings, ResponseParkings } from '../../interfaces/ResponseParkings';\nimport * as ParkingsPageActions from './actions';\nimport {\n  deleteParkingAction,\n  fetchParkingsRequest,\n  postParkingAttemptAction,\n  postParkingError,\n  postParkingSuccess,\n  setParkingsPageCenter,\n} from './actions';\nimport { backendEndpoint } from '../../constants/backend';\nimport { MAX_SEARCH_RADIUS_TO_FETCH } from '../../containers/BaseConfigPage/BaseConfigConstants';\nimport serialize from '../../utils/serialize';\nimport * as parkingsConstants from './constants';\nimport { default as GeoLocationService } from '../../services/GeoLocation.service';\nimport { requestToFreeParkingsAPI } from '../../services/Authentication.service';\nimport { ParkingServerExpects } from '../../interfaces/Parking';\nimport { parkingVoiceNotification } from '../parkingSettings/saga';\nimport { userInfoSelector } from '../userState/selectors';\nimport { USER_ROLE_DRIVER } from '../userState/reducer';\n\n\nexport function* fetchParkingsSaga() {\n  const { lat, lon } = yield select(centerCoordinatesSelector);\n  const searchRadius = yield select(searchRadiusSelector);\n\n  const canFetchParkings = searchRadius < MAX_SEARCH_RADIUS_TO_FETCH;\n  try {\n    if (canFetchParkings) {\n      yield put(ParkingsPageActions.fetchParkingsStart());\n      const isDriver = (yield select(userInfoSelector)) === USER_ROLE_DRIVER;\n      const parkingType = isDriver ? 'free' : 'all';\n      const searchQuery = serialize({ lat, lon, radius: searchRadius, type: parkingType });\n      const rawResponseParkings: ResponseParkings = yield call(requestToFreeParkingsAPI, `${backendEndpoint}/parkings?${searchQuery}`);\n      const preparedResponseParkings: PreparedParkings = prepareParkings(rawResponseParkings);\n      yield call(parkingVoiceNotification, preparedResponseParkings);\n      yield put(ParkingsPageActions.fetchParkingsSuccess(preparedResponseParkings));\n    }\n  } catch (e) {\n    console.error('fetch parkings:', e);\n  }\n}\n\nexport function* updateUrlLatLonSaga(action: ParkingsPageActions.setParkingsPageCenterAction) {\n  try {\n    yield put(push({\n      search: `?lat=${action.payload.lat}&lon=${action.payload.lon}`,\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport function* synchronizeLatLonSaga() {\n  const { lat: latFromUrl, lon: lonFromUrl } = yield select(latLonSelector);\n  yield put(setParkingsPageCenter(latFromUrl, lonFromUrl));\n}\n\nexport function* checkForParkingsUpdates() {\n  yield put(fetchParkingsRequest());\n}\n\nexport function* clearAllFreeSlotsSaga() {\n  try {\n    yield call(fetch, `${backendEndpoint}/admin/cloudevents/drop`, {\n      method: 'POST',\n    });\n  } catch (e) {\n    console.error('Failed to clear all free slots');\n  }\n}\n\nexport function* clearVisibleFreeSlotsSaga() {\n  const { lat, lon } = yield select(centerCoordinatesSelector);\n  const radius = yield select(searchRadiusSelector);\n  const uid = yield select(sessionUidSelector);\n\n  try {\n    yield call(fetch, `${backendEndpoint}/admin/cloudevents/drop/area`, {\n      method: 'POST',\n      body: JSON.stringify({ lat, lon, radius, uid }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  } catch (e) {\n    console.error('Failed to clear visible free slots');\n  }\n\n  yield put(fetchParkingsRequest());\n}\n\nfunction* detectGeoLocationSaga() {\n  if ('geolocation' in navigator) {\n    try {\n      const location = yield call(GeoLocationService.getUserLocation);\n      const { lat, lon } = yield call(GeoLocationService.getUserLatLon, location);\n      yield put(setParkingsPageCenter(lat, lon));\n    } catch (e) {\n      console.error(e);\n    }\n  } else {\n    /* geolocation IS NOT available */\n  }\n}\n\nfunction* createParkingSaga(preparedParkingParameters: ParkingServerExpects) {\n  const url = `${backendEndpoint}/parkings`;\n  const createdParking = yield call(requestToFreeParkingsAPI, url, {\n    method: 'PUT',\n    body: JSON.stringify(preparedParkingParameters),\n  });\n  return createdParking;\n}\n\nfunction* updateParkingSaga(preparedParkingParameters: ParkingServerExpects) {\n  const url = `${backendEndpoint}/parkings/${preparedParkingParameters.id}`;\n  yield call(requestToFreeParkingsAPI, url, {\n    method: 'PUT',\n    body: JSON.stringify(preparedParkingParameters),\n  });\n  return true;\n}\n\nfunction* postParkingSaga(action: postParkingAttemptAction) {\n  const preparedParkingParameters = prepareParkingParametersFromClientToServer(action.payload.parkingCreated);\n  try {\n    let parking = null;\n\n    if (preparedParkingParameters.id) {\n      yield call(updateParkingSaga, preparedParkingParameters);\n      parking = preparedParkingParameters;\n    } else {\n      parking = yield call(createParkingSaga, preparedParkingParameters);\n    }\n    yield put(postParkingSuccess(parking, action.payload.isFree));\n  } catch (e) {\n    yield put(postParkingError());\n  }\n}\n\nfunction* deleteParkingSaga(action: deleteParkingAction) {\n  const parkingId = action.payload;\n  const url = `${backendEndpoint}/parkings/${parkingId}`;\n  try {\n    yield call(requestToFreeParkingsAPI, url, {\n      method: 'DELETE',\n    })\n  } catch (e) {\n    console.error('cannot delete parking', e);\n  }\n}\n\nexport default function* defaultParkingsSaga() {\n  yield all([\n    throttle(3000, parkingsConstants.PARKINGS_REQUEST_FOR_FETCH, fetchParkingsSaga),\n    takeEvery(parkingsConstants.CHANGE_CENTER_LOCATION, updateUrlLatLonSaga),\n    takeEvery(parkingsConstants.CHECK_PARKINGS_UPDATES_REQUEST, checkForParkingsUpdates),\n    takeLatest(parkingsConstants.SYNCHRONIZE_LAT_LON, synchronizeLatLonSaga),\n    takeEvery(parkingsConstants.DELETE_PARKING, deleteParkingSaga),\n    takeEvery(parkingsConstants.DELETE_ALL_FREE_SLOTS, clearAllFreeSlotsSaga),\n    takeEvery(parkingsConstants.DELETE_VISIBLE_FREE_SLOTS, clearVisibleFreeSlotsSaga),\n    takeEvery(parkingsConstants.ASK_PERMISSION_FOR_GEO_LOCATION, detectGeoLocationSaga),\n    takeEvery(parkingsConstants.POST_PARKING_ATTEMPT, postParkingSaga),\n  ]);\n}\n","import { UserInfo, UserInfoRequiredForAuth } from '../interfaces/UserInfo';\nimport { userInfoSelector } from '../store/userState/selectors';\nimport { call, select } from 'redux-saga/effects';\n\n\nexport default class LocalStorageService {\n  public static getUserInfo(): UserInfo | null {\n    const userAuthInfoJSON: string | null = localStorage.getItem('userInfoAuth');\n    if (!userAuthInfoJSON) {\n      return null;\n    }\n    return JSON.parse(userAuthInfoJSON);\n  }\n\n  public static hasUserInfo() {\n    return Boolean(localStorage.getItem('userInfoAuth'));\n  }\n\n  public static getAccessToken() {\n    const userInfo = LocalStorageService.getUserInfo();\n    if (!userInfo || !userInfo.accessToken) {\n      return null;\n    }\n    return userInfo.accessToken;\n  }\n\n  public static getUserInfoRequiredForAuth(): UserInfoRequiredForAuth | null {\n    const userAuthInfoJSON: string | null = localStorage.getItem('userInfoAuth');\n    if (!userAuthInfoJSON) {\n      return null;\n    }\n    return JSON.parse(userAuthInfoJSON);\n  }\n\n  public static saveUserInfoRequiredForAuth(info: UserInfoRequiredForAuth) {\n    localStorage.setItem('userInfoAuth', JSON.stringify(info));\n  }\n\n  public static removeUserInfo() {\n    localStorage.removeItem('userInfoAuth');\n  }\n}\n\nexport function* updateUserInfoLocallySaga() {\n  const userInfo = yield select(userInfoSelector);\n  yield call(LocalStorageService.saveUserInfoRequiredForAuth, {\n    id: userInfo.id,\n    accessToken: userInfo.accessToken,\n  });\n}\n","import isString from 'lodash/isString';\n\nimport { UserInfo } from '../../interfaces/UserInfo';\nimport { userInitialState } from './reducer';\nimport { ResponseLoginInfo } from '../../interfaces/ResponseLoginInfo';\n\n\nexport function userInfoAdapter (loginInfo: ResponseLoginInfo): UserInfo {\n  if (!loginInfo) {\n    return userInitialState;\n  }\n\n  const name = loginInfo.personalInfo.name || '';\n  const surname = loginInfo.personalInfo.surname || '';\n  const fullname = `${name} ${surname}`;\n\n  return {\n    ...userInitialState,\n    accessToken: loginInfo.accessToken,\n    ...loginInfo.personalInfo,\n    fullname,\n  }\n}\n\nexport function signupErrorAdapter(err: any): string | null {\n  if (!err) {\n    return null;\n  }\n  if (isString(err)) {\n    return err;\n  }\n  if ('message' in err) {\n    return err.message;\n  }\n  return null;\n}\n","import { all, call, put, select, takeLatest } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { action } from 'typesafe-actions';\n\nimport { backendEndpoint } from '../../constants/backend';\nimport {\n  initUserAuthInfoOnLoad,\n  initUserInfoOnLoad,\n  signinUserAttemptAction,\n  signinUserError,\n  signinUserSuccess,\n  signupUserAttemptAction,\n  signupUserError,\n  signupUserSuccess,\n  updateAvatarAction,\n  updateDefaultCountryAction,\n  updateFullnameAction,\n  updateGenderAction,\n  updateUsernameAction,\n  userSignOutSuccess,\n} from './actions';\nimport LocalStorageService, { updateUserInfoLocallySaga } from '../../services/LocalStorage.service';\nimport {\n  USER_SIGN_IN_ATTEMPT,\n  USER_SIGN_IN_SUCCESS,\n  USER_SIGN_OUT_ATTEMPT,\n  USER_SIGN_OUT_ERROR,\n  USER_SIGN_OUT_SUCCESS,\n  USER_SIGN_UP_ATTEMPT,\n  USER_SIGN_UP_SUCCESS,\n} from '../../containers/App/constants';\nimport UrlService from '../../services/Url.service';\nimport { requestToFreeParkingsAPI } from '../../services/Authentication.service';\nimport { signupErrorAdapter, userInfoAdapter } from './adapters';\nimport { userAccessTokenSelector, userIdSelector, userInfoSelector } from './selectors';\nimport { ResponseLoginInfo } from '../../interfaces/ResponseLoginInfo';\nimport {\n  USER_UPDATE_AVATAR,\n  USER_UPDATE_DEFAULT_COUNTRY,\n  USER_UPDATE_FULLNAME,\n  USER_UPDATE_GENDER,\n  USER_UPDATE_USERNAME,\n} from './constants';\nimport { loadCarParametersAttempt, loadCarParametersReset } from '../car/actions';\nimport { UserInfo, UserInfoRequiredForAuth } from '../../interfaces/UserInfo';\n\n\nfunction* redirectToPageByRole() {\n  const userInfo = yield select(userInfoSelector);\n  yield put(push(UrlService.detectPageByUserInfo(userInfo)));\n}\n\nfunction* signinUserAttemptSaga(action: signinUserAttemptAction) {\n  const { username, password } = action.payload;\n  const url = `${backendEndpoint}/auth/login`;\n\n  try {\n    const loginInfo: ResponseLoginInfo = yield call(requestToFreeParkingsAPI, url, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n    });\n    const userInfo = userInfoAdapter(loginInfo);\n    yield put(signinUserSuccess(userInfo));\n  } catch (e) {\n    yield put(signinUserError());\n  }\n}\n\nfunction* signinUserSuccessSaga() {\n  yield call(updateUserInfoLocallySaga);\n  yield call(redirectToPageByRole);\n  yield put(loadCarParametersAttempt());\n}\n\nfunction* signoutUserSuccessSaga() {\n  yield put(loadCarParametersReset());\n  yield call(LocalStorageService.removeUserInfo);\n  yield call(redirectToPageByRole);\n}\n\nfunction* signoutUserAttemptSaga() {\n  const url = `${backendEndpoint}/auth/logout`;\n  const accessToken = yield select(userAccessTokenSelector);\n  if (!accessToken) {\n    yield put(userSignOutSuccess());\n    return;\n  }\n\n  try {\n    yield call(requestToFreeParkingsAPI, url, {\n      method: 'POST',\n    });\n    yield put(userSignOutSuccess());\n  } catch (e) {\n    yield put(action(USER_SIGN_OUT_ERROR));\n  }\n\n  yield call(LocalStorageService.removeUserInfo);\n}\n\nfunction* loadUserInfoByAccessToken() {\n  const userId = yield select(userIdSelector);\n\n  try {\n    const userInfo: UserInfo = yield call(requestToFreeParkingsAPI, `${backendEndpoint}/users/${userId}`);\n    yield put(initUserInfoOnLoad(userInfo));\n  } catch (e) {\n    yield put(userSignOutSuccess());\n  }\n}\n\nfunction* initUserInfoOnLoadSaga() {\n  const userInfoRequiredForAuth: UserInfoRequiredForAuth | null = yield call(LocalStorageService.getUserInfoRequiredForAuth);\n\n  if (userInfoRequiredForAuth && userInfoRequiredForAuth.accessToken) {\n    yield put(initUserAuthInfoOnLoad(userInfoRequiredForAuth));\n    yield call(loadUserInfoByAccessToken);\n    yield put(loadCarParametersAttempt());\n  } else {\n    yield call(signoutUserSuccessSaga);\n  }\n}\n\nfunction* signupUserAttemptSaga(action: signupUserAttemptAction) {\n  const { username, password } = action.payload;\n  const url = `${backendEndpoint}/auth/signup`;\n\n  try {\n    yield call(requestToFreeParkingsAPI, url, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n    });\n    yield put(signupUserSuccess());\n  } catch (e) {\n    const errorData = yield e.json();\n    const errorMessage = signupErrorAdapter(errorData);\n    yield put(signupUserError(errorMessage));\n  }\n}\n\nfunction* signupUserSuccessSaga() {\n  alert('signed up successfully');\n  yield put(push(UrlService.loginPageUrl));\n}\n\nfunction* updatePersonalInfoField(key: string, value: string) {\n  const userId = yield select(userIdSelector);\n  const url = `${backendEndpoint}/users/${userId}`;\n\n  try {\n    yield call(requestToFreeParkingsAPI, url, {\n      method: 'POST',\n      body: JSON.stringify({ [key]: value }),\n    });\n    yield call(updateUserInfoLocallySaga);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* updateAvatarSaga(action: updateAvatarAction) {\n  yield call(updatePersonalInfoField, 'imageUrl', action.payload);\n}\n\nfunction* updateUsernameSaga(action: updateUsernameAction) {\n  yield call(updatePersonalInfoField, 'username', action.payload);\n}\n\nfunction* updateFullnameSaga(action: updateFullnameAction) {\n  yield call(updatePersonalInfoField, 'fullname', action.payload);\n}\n\nfunction* updateGenderSaga(action: updateGenderAction) {\n  yield call(updatePersonalInfoField, 'gender', action.payload);\n}\n\nfunction* updateDefaultCountrySaga(action: updateDefaultCountryAction) {\n  yield call(updatePersonalInfoField, 'defaultCountry', action.payload);\n}\n\nconst defaultLoginPageSaga = function* () {\n  yield all([\n    takeLatest(USER_SIGN_IN_ATTEMPT, signinUserAttemptSaga),\n    takeLatest(USER_SIGN_IN_SUCCESS, signinUserSuccessSaga),\n    takeLatest(USER_SIGN_OUT_ATTEMPT, signoutUserAttemptSaga),\n    takeLatest(USER_SIGN_OUT_SUCCESS, signoutUserSuccessSaga),\n    takeLatest(USER_SIGN_UP_ATTEMPT, signupUserAttemptSaga),\n    takeLatest(USER_SIGN_UP_SUCCESS, signupUserSuccessSaga),\n    takeLatest(USER_UPDATE_AVATAR, updateAvatarSaga),\n    takeLatest(USER_UPDATE_USERNAME, updateUsernameSaga),\n    takeLatest(USER_UPDATE_FULLNAME, updateFullnameSaga),\n    takeLatest(USER_UPDATE_GENDER, updateGenderSaga),\n    takeLatest(USER_UPDATE_DEFAULT_COUNTRY, updateDefaultCountrySaga),\n    yield call(initUserInfoOnLoadSaga),\n  ]);\n};\n\nexport default defaultLoginPageSaga;\n","import isObject from 'lodash/isObject';\n\nimport { CarInfo } from '../../interfaces/CarInfo';\n\n\nexport function prepareCarInfo(rawCarInfo: any): CarInfo {\n  if (!rawCarInfo || !isObject(rawCarInfo)) {\n    return {};\n  }\n\n  return rawCarInfo;\n}\n","import { all, call, put, select, takeLatest } from 'redux-saga/effects';\n\nimport { carPageIsCachedSelector } from './selectors';\nimport { requestToFreeParkingsAPI } from '../../services/Authentication.service';\nimport { backendEndpoint } from '../../constants/backend';\nimport { userIdSelector } from '../userState/selectors';\nimport {\n  loadCarManufacturersAttempt, loadCarManufacturersError, loadCarManufacturersSuccess,\n  loadCarParametersError,\n  loadCarParametersSuccess,\n  updateCarParameterValueAttemptAction,\n  updateCarParameterValueError,\n  updateCarParameterValueSuccess,\n} from './actions';\nimport { prepareCarInfo } from './adapters';\nimport { LOAD_CAR_PARAMETERS_ATTEMPT, UPDATE_CAR_PARAMETER_VALUE_ATTEMPT } from './constants';\n\n\nfunction* loadCarDataIfAbsent() {\n  const carPageIsCached = yield select(carPageIsCachedSelector);\n  const userId = yield select(userIdSelector);\n  if (carPageIsCached) {\n    return;\n  }\n\n  try {\n    const rawCarInfo = yield call(requestToFreeParkingsAPI, `${backendEndpoint}/users/${userId}/car`);\n    const preparedCarInfo = prepareCarInfo(rawCarInfo);\n    yield put(loadCarParametersSuccess(preparedCarInfo));\n  } catch(err) {\n    yield put(loadCarParametersError());\n  }\n}\n\nfunction* updateCarParameterValueSaga(action: updateCarParameterValueAttemptAction) {\n  const userId = yield select(userIdSelector);\n  try {\n    yield call(requestToFreeParkingsAPI, `${backendEndpoint}/users/${userId}/car`, {\n      method: 'POST',\n      body: JSON.stringify({\n        [action.payload.paramKey]: action.payload.paramValue,\n      }),\n    });\n    yield put(updateCarParameterValueSuccess(action.payload));\n  } catch(err) {\n    yield put(updateCarParameterValueError());\n  }\n}\n\nfunction* loadCarManufacturers() {\n  try {\n    yield put(loadCarManufacturersAttempt());\n    const manufacturersList: string[] = yield call(requestToFreeParkingsAPI, `${backendEndpoint}/cars/manufacturers`);\n    yield put(loadCarManufacturersSuccess(manufacturersList));\n  } catch(err) {\n    yield put(loadCarManufacturersError());\n  }\n}\n\n\nexport default function* defaultCarPageSaga() {\n  yield all([\n    yield takeLatest(LOAD_CAR_PARAMETERS_ATTEMPT, loadCarDataIfAbsent),\n    yield takeLatest(UPDATE_CAR_PARAMETER_VALUE_ATTEMPT, updateCarParameterValueSaga),\n    yield call(loadCarManufacturers),\n  ]);\n};\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport * as actions from './actions';\nimport * as constants from './constants';\nimport { UserInfo } from '../../interfaces/UserInfo';\nimport { backendEndpoint } from '../../constants/backend';\nimport { loadAllUsersError, loadAllUsersSuccess, setUserRoleError, setUserRoleSuccess } from './actions';\nimport { requestToFreeParkingsAPI } from '../../services/Authentication.service';\n\n\nfunction* loadAllUsersSaga() {\n  const url = `${backendEndpoint}/users`;\n  try {\n    const allUsers: UserInfo[] = yield call(requestToFreeParkingsAPI, url);\n    yield put(loadAllUsersSuccess(allUsers));\n  } catch(e) {\n    yield put(loadAllUsersError());\n  }\n}\n\nfunction* setUserRoleSaga(action: actions.setUserRoleAttemptAction) {\n  const url = `${backendEndpoint}/users/${action.payload.id}`;\n  try {\n    yield call(requestToFreeParkingsAPI, url, {\n      method: 'POST',\n      body: JSON.stringify({ role: action.payload.role }),\n    });\n    yield put(setUserRoleSuccess(action.payload.id, action.payload.role));\n  } catch(e) {\n    yield put(setUserRoleError());\n  }\n}\n\nexport default function* defaultAllUsersSaga() {\n  yield all([\n    takeLatest(constants.LOAD_ALL_USERS_ATTEMPT, loadAllUsersSaga),\n    takeLatest(constants.SET_USER_ROLE_ATTEMPT, setUserRoleSaga),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport defaultParkingsSaga from './parkings/saga';\nimport defaultLoginPageSaga from './userState/saga';\nimport defaultCarPageSaga from './car/saga';\nimport defaultParkingSettingsSaga from './parkingSettings/saga';\nimport defaultAllUsersSaga from './allUsers/saga';\n\n\nfunction* initSaga() {\n  yield all([\n    defaultParkingsSaga(),\n    defaultLoginPageSaga(),\n    defaultCarPageSaga(),\n    defaultParkingSettingsSaga(),\n    defaultAllUsersSaga(),\n  ]);\n}\n\nexport default initSaga;\n","import * as BaseConfigConstants from './BaseConfigConstants';\nimport { BaseConfigAction } from './BaseConfigActions';\n\n\nexport interface BaseConfigState {\n  readonly parkingSearchRadius: number,\n  readonly startPointLat: number,\n  readonly startPointLon: number,\n  readonly defaultZoomLevel: number,\n  readonly sessionUid: string,\n  readonly isSidebarOpen: boolean,\n}\n\nexport const BaseConfigInitialState: BaseConfigState = {\n  parkingSearchRadius: BaseConfigConstants.INITIAL_SEARCH_RADIUS,\n  startPointLat: BaseConfigConstants.KYIV_CENTER_LAT,\n  startPointLon: BaseConfigConstants.KYIV_CENTER_LON,\n  defaultZoomLevel: 7,\n  sessionUid: String(Math.random()).slice(2),\n  isSidebarOpen: false,\n};\n\n\nexport default function baseConfigReducer(\n  state: BaseConfigState = BaseConfigInitialState,\n  action: BaseConfigAction,\n): BaseConfigState {\n  switch (action.type) {\n    case BaseConfigConstants.BASE_CONFIG_RADIUS_SET: {\n      return {\n        ...state,\n        parkingSearchRadius: action.payload,\n      };\n    }\n    case BaseConfigConstants.BASE_CONFIG_RADIUS_RESET: {\n      return {\n        ...state,\n        parkingSearchRadius: BaseConfigInitialState.parkingSearchRadius,\n      };\n    }\n    case BaseConfigConstants.BASE_CONFIG_OPEN_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: true,\n      };\n    }\n    case BaseConfigConstants.BASE_CONFIG_CLOSE_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import uniqBy from 'lodash/uniqBy';\n\nimport {\n  CHANGE_CENTER_LOCATION,\n  PARKINGS_REQUEST_FOR_FETCH,\n  PARKINGS_FETCH_SUCCESS,\n  PARKINGS_FETCH_START,\n  CHECK_PARKINGS_UPDATES_SUCCESS,\n  DELETE_PARKING,\n  DELETE_ALL_FREE_SLOTS,\n  CHANGE_ZOOM_LEVEL,\n  POST_PARKING_ATTEMPT,\n  POST_PARKING_SUCCESS,\n} from './constants';\nimport { Actions } from './actions';\nimport { BaseConfigInitialState } from '../../containers/BaseConfigPage/BaseConfigReducer';\nimport { Parking } from '../../interfaces/Parking';\n\n\nexport interface ParkingsPageState {\n  readonly centerLat: number,\n  readonly centerLon: number,\n  readonly zoomLevel: number,\n  readonly lastParkingsCheckTimestamp: number,\n  readonly lastParkingsCheckUpdatesCount: number,\n  readonly isFetchInProgress: boolean,\n  readonly wasFetchPerformed: boolean,\n  readonly busyParkings: Parking[],\n  readonly freeParkings: Parking[],\n}\n\nexport const ParkingsPageInitialState: ParkingsPageState = {\n  centerLat: BaseConfigInitialState.startPointLat,\n  centerLon: BaseConfigInitialState.startPointLon,\n  zoomLevel: BaseConfigInitialState.defaultZoomLevel,\n  lastParkingsCheckTimestamp: 0,\n  lastParkingsCheckUpdatesCount: 0,\n  isFetchInProgress: false,\n  wasFetchPerformed: false,\n  busyParkings: [],\n  freeParkings: [],\n};\n\n\nexport default function reducer(\n  state: ParkingsPageState = ParkingsPageInitialState,\n  action: Actions,\n): ParkingsPageState {\n  switch (action.type) {\n    case CHANGE_CENTER_LOCATION: {\n      return {\n        ...state,\n        centerLat: action.payload.lat,\n        centerLon: action.payload.lon,\n        lastParkingsCheckTimestamp: ParkingsPageInitialState.lastParkingsCheckTimestamp,\n        lastParkingsCheckUpdatesCount: ParkingsPageInitialState.lastParkingsCheckUpdatesCount,\n      };\n    }\n    case CHANGE_ZOOM_LEVEL: {\n      return {\n        ...state,\n        zoomLevel: action.payload,\n      }\n    }\n    case PARKINGS_REQUEST_FOR_FETCH: {\n      return {\n        ...state,\n        isFetchInProgress: true,\n      };\n    }\n    case PARKINGS_FETCH_START: {\n      return {\n        ...state,\n        wasFetchPerformed: true,\n      };\n    }\n    case PARKINGS_FETCH_SUCCESS: {\n      return {\n        ...state,\n        busyParkings: uniqBy([\n          ...state.busyParkings,\n          ...action.payload.filter(p => !p.isFree),\n        ], 'id'),\n        freeParkings: uniqBy([\n          ...state.freeParkings,\n          ...action.payload.filter(p => p.isFree),\n        ], 'id'),\n        isFetchInProgress: false,\n      };\n    }\n    case POST_PARKING_ATTEMPT: {\n      return {\n        ...state,\n        isFetchInProgress: true,\n        busyParkings: [...state.busyParkings.filter(p => p.id !== action.payload.parkingCreated.id)],\n        freeParkings: [...state.freeParkings.filter(p => p.id !== action.payload.parkingCreated.id)],\n      };\n    }\n    case POST_PARKING_SUCCESS: {\n      const isFreeNow = action.payload.isFree;\n      const busyParkings = isFreeNow\n        ? state.busyParkings\n        : uniqBy([...state.busyParkings, action.payload.parkingCreated], 'id');\n      const freeParkings = isFreeNow\n        ? uniqBy([...state.freeParkings, action.payload.parkingCreated], 'id')\n        : state.freeParkings;\n\n      return {\n        ...state,\n        busyParkings,\n        freeParkings,\n        isFetchInProgress: false,\n      };\n    }\n    case CHECK_PARKINGS_UPDATES_SUCCESS: {\n      return {\n        ...state,\n        lastParkingsCheckTimestamp: action.payload.timestamp,\n        lastParkingsCheckUpdatesCount: action.payload.updatesCount,\n        isFetchInProgress: false,\n      };\n    }\n    case DELETE_PARKING: {\n      return {\n        ...state,\n        busyParkings: state.busyParkings.filter(({id}) => id !== action.payload),\n        freeParkings: state.freeParkings.filter(({id}) => id !== action.payload),\n      }\n    }\n    case DELETE_ALL_FREE_SLOTS: {\n      return {\n        ...state,\n        freeParkings: ParkingsPageInitialState.freeParkings,\n        lastParkingsCheckTimestamp: ParkingsPageInitialState.lastParkingsCheckTimestamp,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { CarInfo } from '../../interfaces/CarInfo';\nimport { CarAction } from './actions';\nimport {\n  LOAD_CAR_MANUFACTURERS_SUCCESS,\n  LOAD_CAR_PARAMETERS_ATTEMPT,\n  LOAD_CAR_PARAMETERS_ERROR,\n  LOAD_CAR_PARAMETERS_RESET,\n  LOAD_CAR_PARAMETERS_SUCCESS, UPDATE_CAR_PARAMETER_VALUE_ATTEMPT,\n} from './constants';\n\n\nexport interface CarPageOwnProps {\n  isInProgress: boolean,\n  isError: boolean,\n  isCached: boolean,\n  carManufacturers: string[],\n  carInfo: CarInfo,\n}\n\nexport const carPageInitialState: CarPageOwnProps = {\n  isInProgress: false,\n  isError: false,\n  isCached: false,\n  carManufacturers: [],\n  carInfo: {},\n};\n\nexport default function carPageReducer(\n  state: CarPageOwnProps = carPageInitialState,\n  action: CarAction,\n): CarPageOwnProps {\n  switch (action.type) {\n    case UPDATE_CAR_PARAMETER_VALUE_ATTEMPT: {\n      return {\n        ...state,\n        carInfo: {\n          ...state.carInfo,\n          [action.payload.paramKey]: action.payload.paramValue,\n        }\n      };\n    }\n    case LOAD_CAR_PARAMETERS_ATTEMPT: {\n      return {\n        ...state,\n        isInProgress: true,\n        isError: false,\n      };\n    }\n    case LOAD_CAR_PARAMETERS_SUCCESS: {\n      return {\n        ...state,\n        isInProgress: false,\n        isError: false,\n        isCached: true,\n        carInfo: action.payload,\n      };\n    }\n    case LOAD_CAR_PARAMETERS_ERROR: {\n      return {\n        ...state,\n        isInProgress: false,\n        isError: true,\n      };\n    }\n    case LOAD_CAR_PARAMETERS_RESET: {\n      return carPageInitialState;\n    }\n    case LOAD_CAR_MANUFACTURERS_SUCCESS: {\n      return {\n        ...state,\n        carManufacturers: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as constants from './constants';\nimport { ParkingSettingsAction } from './actions';\n\n\nexport interface UserSettingsParkingPreferencesOwnProps {\n  areVoiceNotificationsEnabled: boolean,\n  isParkingAutoSearchEnabled: boolean,\n}\n\nconst parkingSettingsInitialState: UserSettingsParkingPreferencesOwnProps = {\n  areVoiceNotificationsEnabled: false,\n  isParkingAutoSearchEnabled: false,\n};\n\nexport default function parkingSettingsReducer(\n  state: UserSettingsParkingPreferencesOwnProps = parkingSettingsInitialState,\n  action: ParkingSettingsAction,\n): UserSettingsParkingPreferencesOwnProps {\n  switch (action.type) {\n    case constants.SET_VOICE_NOTIFICATIONS: {\n      return {\n        ...state,\n        areVoiceNotificationsEnabled: action.payload,\n      };\n    }\n    case constants.SET_CHECKING_PARKING_UPDATES: {\n      return {\n        ...state,\n        isParkingAutoSearchEnabled: action.payload,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import clone from 'lodash/clone';\nimport setWith from 'lodash/setWith';\n\nimport { UserInfo } from '../../interfaces/UserInfo';\nimport { AllUsersAction } from './actions';\nimport { LOAD_ALL_USERS_ATTEMPT, LOAD_ALL_USERS_ERROR, LOAD_ALL_USERS_SUCCESS, SET_USER_ROLE_SUCCESS } from './constants';\n\n\nexport interface AllUsersPageOwnProps {\n  users: UserInfo[],\n  isInProgress: boolean,\n}\n\nconst allUsersPageInitialState: AllUsersPageOwnProps = {\n  users: [],\n  isInProgress: false,\n};\n\nexport default function allUsersReducer(\n  state: AllUsersPageOwnProps = allUsersPageInitialState,\n  action: AllUsersAction,\n): AllUsersPageOwnProps {\n  switch (action.type) {\n    case LOAD_ALL_USERS_ATTEMPT: {\n      return {\n        ...state,\n        isInProgress: true,\n      };\n    }\n    case LOAD_ALL_USERS_SUCCESS: {\n      return {\n        ...state,\n        isInProgress: false,\n        users: action.payload,\n      };\n    }\n    case LOAD_ALL_USERS_ERROR: {\n      return {\n        ...state,\n        isInProgress: false,\n      };\n    }\n    case SET_USER_ROLE_SUCCESS: {\n      const userIndex = state.users.findIndex(({ id }) => id === action.payload.id);\n      const updatedUser: UserInfo = {\n        ...state.users[userIndex],\n        role: action.payload.role,\n      };\n      const updatedUsersList = setWith(clone(state.users), [userIndex], updatedUser, clone);\n      return {\n        ...state,\n        users: updatedUsersList,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport { History, LocationState } from 'history';\nimport { connectRouter, RouterState } from 'connected-react-router';\n\nimport baseConfigReducer, { BaseConfigState } from '../containers/BaseConfigPage/BaseConfigReducer';\nimport parkingsPageReducer, { ParkingsPageState } from './parkings/reducer';\nimport userReducer from './userState/reducer';\nimport { UserInfo } from '../interfaces/UserInfo';\nimport carPageReducer, { CarPageOwnProps } from './car/reducer';\nimport parkingSettingsReducer, { UserSettingsParkingPreferencesOwnProps } from './parkingSettings/reducer';\nimport allUsersReducer, { AllUsersPageOwnProps } from './allUsers/reducer';\n\n\nexport interface RootReducer {\n  router: RouterState,\n  config: BaseConfigState,\n  parkingsPage: ParkingsPageState,\n  user: UserInfo,\n  car: CarPageOwnProps,\n  parkingSettings: UserSettingsParkingPreferencesOwnProps,\n  allUsers: AllUsersPageOwnProps,\n}\n\nfunction createRootReducer(history: History<LocationState>) {\n  return combineReducers({\n    router: connectRouter(history),\n    config: baseConfigReducer,\n    parkingsPage: parkingsPageReducer,\n    user: userReducer,\n    car: carPageReducer,\n    parkingSettings: parkingSettingsReducer,\n    allUsers: allUsersReducer,\n  });\n}\n\nexport default createRootReducer;\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","interface GlobalStyledTheme {\n  readonly borderColor: string,\n}\n\nexport const lightTheme: GlobalStyledTheme = {\n  borderColor: '#dee1e4',\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport './index.global.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport { history } from './store/history';\nimport { lightTheme } from './themes.styled';\n\n\nconst store = configureStore(history);\n\n// @ts-ignore\nconst renderApp = () => <App/>;\n\n// TS check hack\nconst AppConnected = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ThemeProvider theme={lightTheme}>\n        {renderApp()}\n      </ThemeProvider>\n    </ConnectedRouter>\n  </Provider>\n);\n\nReactDOM.render(<AppConnected/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import createSagaMiddleware from 'redux-saga';\nimport { History, LocationState } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport initialSaga from './rootSaga';\nimport createRootReducer from './rootReducer';\n// import monitorReducersEnhancer from './monitorReducer'; // enable to investigate Redux performance\n\n\nexport default function configureStore(history: History<LocationState>) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [routerMiddleware(history), sagaMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer/*, monitorReducersEnhancer*/];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    createRootReducer(history),\n    undefined,\n    composedEnhancers,\n  );\n\n  sagaMiddleware.run(initialSaga);\n\n  return store;\n}\n","export const LOAD_ALL_USERS_ATTEMPT = 'Drivers page/LOAD_ALL_USERS_ATTEMPT';\nexport const LOAD_ALL_USERS_SUCCESS = 'Drivers page/LOAD_ALL_USERS_SUCCESS';\nexport const LOAD_ALL_USERS_ERROR = 'Drivers page/LOAD_ALL_USERS_ERROR';\n\nexport const SET_USER_ROLE_ATTEMPT = 'Drivers page/SET_USER_ROLE_ATTEMPT';\nexport const SET_USER_ROLE_SUCCESS = 'Drivers page/SET_USER_ROLE_SUCCESS';\nexport const SET_USER_ROLE_ERROR = 'Drivers page/SET_USER_ROLE_ERROR';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__iAc1s\",\"HeaderLogo\":\"Header_HeaderLogo__1BKBJ\",\"HeaderLogoFull\":\"Header_HeaderLogoFull__1WZzz\",\"HeaderUserPanel\":\"Header_HeaderUserPanel__1Cchf\",\"HeaderUserPanelAvatar\":\"Header_HeaderUserPanelAvatar__3YE-h\",\"HeaderUserActionsDropdownList\":\"Header_HeaderUserActionsDropdownList__ktAyG\",\"HeaderUserActionsDropdownListDivider\":\"Header_HeaderUserActionsDropdownListDivider__rFL-X\",\"HeaderUserActionsDropdownLink\":\"Header_HeaderUserActionsDropdownLink__2mZow\"};","export const BASE_CONFIG_RADIUS_SET = 'config/BASE_CONFIG_RADIUS_SET';\nexport const BASE_CONFIG_RADIUS_RESET = 'config/BASE_CONFIG_RADIUS_RESET';\nexport const BASE_CONFIG_OPEN_SIDEBAR = 'config/BASE_CONFIG_OPEN_SIDEBAR';\nexport const BASE_CONFIG_CLOSE_SIDEBAR = 'config/BASE_CONFIG_CLOSE_SIDEBAR';\n\n/**\n * Used to detect whether to fetch parkings.\n * If user sees map with size g.t. [this value * 2], in other words, city zoom level,\n * do not send request for parkings.\n */\nexport const MAX_SEARCH_RADIUS_TO_FETCH = 1000;\n\nexport const INITIAL_SEARCH_RADIUS = 2000;\nexport const KYIV_CENTER_LAT = 50.4501;\nexport const KYIV_CENTER_LON = 30.5234;\n\nexport const DEFAULT_ZOOM_LEVEL = 16.248; // ~600m search radius\n","import { action, ActionType } from 'typesafe-actions';\n\nimport {\n  INIT_USER_AUTH_INFO_ON_LOAD,\n  INIT_USER_INFO_ON_LOAD,\n  NOT_ALLOWED_WITH_GUEST_PERMISSION,\n  USER_SIGN_IN_ATTEMPT,\n  USER_SIGN_IN_ERROR,\n  USER_SIGN_IN_SUCCESS,\n  USER_SIGN_OUT_ATTEMPT,\n  USER_SIGN_OUT_SUCCESS,\n  USER_SIGN_UP_ATTEMPT,\n  USER_SIGN_UP_ERROR,\n  USER_SIGN_UP_SUCCESS,\n} from '../../containers/App/constants';\nimport {\n  USER_UPDATE_AVATAR,\n  USER_UPDATE_DEFAULT_COUNTRY,\n  USER_UPDATE_FULLNAME,\n  USER_UPDATE_GENDER,\n  USER_UPDATE_USERNAME,\n} from './constants';\nimport { UserGenderType, UserInfo, UserInfoRequiredForAuth } from '../../interfaces/UserInfo';\n\n\nexport const initUserAuthInfoOnLoad = (userAuthInfo: UserInfoRequiredForAuth) => action(INIT_USER_AUTH_INFO_ON_LOAD, userAuthInfo);\nexport type initUserAuthInfoOnLoadAction = ActionType<typeof initUserAuthInfoOnLoad>;\nexport type initUserAuthInfoOnLoadActionCreator = (userAuthInfo: UserInfoRequiredForAuth) => initUserAuthInfoOnLoadAction;\n\nexport const initUserInfoOnLoad = (userInfo: UserInfo) => action(INIT_USER_INFO_ON_LOAD, userInfo);\nexport type initUserInfoOnLoadAction = ActionType<typeof initUserInfoOnLoad>;\nexport type initUserInfoOnLoadActionCreator = (userInfo: UserInfo) => initUserInfoOnLoadAction;\n\nexport const signinUserAttempt = (username: string, password: string) => action(USER_SIGN_IN_ATTEMPT, { username, password });\nexport type signinUserAttemptAction = ActionType<typeof signinUserAttempt>;\nexport type signinUserAttemptActionCreator = (username: string, password: string) => signinUserAttemptAction;\n\nexport const signinUserSuccess = (userInfo: UserInfo) => action(USER_SIGN_IN_SUCCESS, userInfo);\nexport type signinUserSuccessAction = ActionType<typeof signinUserSuccess>;\nexport type signinUserSuccessActionCreator = (userInfo: UserInfo) => signinUserSuccessAction;\n\nexport const signinUserError = () => action(USER_SIGN_IN_ERROR);\nexport type signinUserErrorAction = ActionType<typeof signinUserError>;\nexport type signinUserErrorActionCreator = () => signinUserErrorAction;\n\nexport const userSignOutAttempt = () => action(USER_SIGN_OUT_ATTEMPT);\nexport type userSignOutAttemptAction = ActionType<typeof userSignOutAttempt>;\nexport type userSignOutAttemptActionCreator = () => userSignOutAttemptAction;\n\nexport const userSignOutSuccess = () => action(USER_SIGN_OUT_SUCCESS);\nexport type userSignOutSuccessAction = ActionType<typeof userSignOutSuccess>;\nexport type userSignOutSuccessActionCreator = () => userSignOutSuccessAction;\n\nexport const signupUserAttempt = (username: string, password: string) => action(USER_SIGN_UP_ATTEMPT, { username, password });\nexport type signupUserAttemptAction = ActionType<typeof signupUserAttempt>;\nexport type signupUserAttemptActionCreator = (username: string, password: string) => signupUserAttemptAction;\n\nexport const signupUserSuccess = () => action(USER_SIGN_UP_SUCCESS);\nexport type signupUserSuccessAction = ActionType<typeof signupUserSuccess>;\nexport type signupUserSuccessActionCreator = () => signupUserSuccessAction;\n\nexport const signupUserError = (signupError: string | null) => action(USER_SIGN_UP_ERROR, { signupError });\nexport type signupUserErrorAction = ActionType<typeof signupUserError>;\nexport type signupUserErrorActionCreator = (signupError: string | null) => signupUserErrorAction;\n\nexport const notAllowedWithGuestPermission = () => action(NOT_ALLOWED_WITH_GUEST_PERMISSION);\nexport type notAllowedWithGuestPermissionAction = ActionType<typeof notAllowedWithGuestPermission>;\nexport type notAllowedWithGuestPermissionActionCreator = () => notAllowedWithGuestPermissionAction;\n\nexport const updateAvatar = (avatarUrl: string) => action(USER_UPDATE_AVATAR, avatarUrl);\nexport type updateAvatarAction = ActionType<typeof updateAvatar>;\nexport type updateAvatarActionCreator = (avatarUrl: string) => updateAvatarAction;\n\nexport const updateUsername = (username: string) => action(USER_UPDATE_USERNAME, username);\nexport type updateUsernameAction = ActionType<typeof updateUsername>;\nexport type updateUsernameActionCreator = (username: string) => updateUsernameAction;\n\nexport const updateFullname = (fullname: string) => action(USER_UPDATE_FULLNAME, fullname);\nexport type updateFullnameAction = ActionType<typeof updateFullname>;\nexport type updateFullnameActionCreator = (fullname: string) => updateFullnameAction;\n\nexport const updateGender = (gender: UserGenderType) => action(USER_UPDATE_GENDER, gender);\nexport type updateGenderAction = ActionType<typeof updateGender>;\nexport type updateGenderActionCreator = (gender: UserGenderType) => updateGenderAction;\n\nexport const updateDefaultCountry = (country: string) => action(USER_UPDATE_DEFAULT_COUNTRY, country);\nexport type updateDefaultCountryAction = ActionType<typeof updateDefaultCountry>;\nexport type updateDefaultCountryActionCreator = (country: string) => updateDefaultCountryAction;\n\nexport type UserAction = initUserAuthInfoOnLoadAction\n  | initUserInfoOnLoadAction\n  | signinUserAttemptAction\n  | signinUserSuccessAction\n  | signinUserErrorAction\n  | userSignOutAttemptAction\n  | userSignOutSuccessAction\n  | signupUserAttemptAction\n  | signupUserSuccessAction\n  | signupUserErrorAction\n  | updateAvatarAction\n  | updateUsernameAction\n  | updateFullnameAction\n  | updateGenderAction\n  | updateDefaultCountryAction\n;\n","import { action, ActionType } from 'typesafe-actions';\n\nimport {\n  LOAD_CAR_MANUFACTURERS_ATTEMPT, LOAD_CAR_MANUFACTURERS_ERROR, LOAD_CAR_MANUFACTURERS_SUCCESS,\n  LOAD_CAR_PARAMETERS_ATTEMPT,\n  LOAD_CAR_PARAMETERS_ERROR,\n  LOAD_CAR_PARAMETERS_RESET,\n  LOAD_CAR_PARAMETERS_SUCCESS,\n  UPDATE_CAR_PARAMETER_VALUE_ATTEMPT,\n  UPDATE_CAR_PARAMETER_VALUE_ERROR,\n  UPDATE_CAR_PARAMETER_VALUE_SUCCESS,\n} from './constants';\nimport { CarInfo } from '../../interfaces/CarInfo';\n\n\nexport const loadCarParametersAttempt = () => action(LOAD_CAR_PARAMETERS_ATTEMPT);\nexport type loadCarParametersAttemptAction = ActionType<typeof loadCarParametersAttempt>;\nexport type loadCarParametersAttemptActionCreator = () => loadCarParametersAttemptAction;\n\nexport const loadCarParametersSuccess = (carInfo: CarInfo) => action(LOAD_CAR_PARAMETERS_SUCCESS, carInfo);\nexport type loadCarParametersSuccessAction = ActionType<typeof loadCarParametersSuccess>;\nexport type loadCarParametersSuccessActionCreator = (carInfo: CarInfo) => loadCarParametersSuccessAction;\n\nexport const loadCarParametersError = () => action(LOAD_CAR_PARAMETERS_ERROR);\nexport type loadCarParametersErrorAction = ActionType<typeof loadCarParametersError>;\nexport type loadCarParametersErrorActionCreator = () => loadCarParametersErrorAction;\n\nexport const loadCarParametersReset = () => action(LOAD_CAR_PARAMETERS_RESET);\nexport type loadCarParametersResetAction = ActionType<typeof loadCarParametersReset>;\nexport type loadCarParametersResetActionCreator = () => loadCarParametersResetAction;\n\nexport const updateCarParameterValueAttempt = (paramKey: string, paramValue?: string | number) => action(UPDATE_CAR_PARAMETER_VALUE_ATTEMPT, { paramKey, paramValue });\nexport type updateCarParameterValueAttemptAction = ActionType<typeof updateCarParameterValueAttempt>;\nexport type updateCarParameterValueAttemptActionCreator = (paramKey: string, paramValue?: string | number) => updateCarParameterValueAttemptAction;\n\nexport const updateCarParameterValueSuccess = ({ paramKey, paramValue }: { paramKey: string, paramValue?: string | number }) => action(UPDATE_CAR_PARAMETER_VALUE_SUCCESS, { paramKey, paramValue });\nexport type updateCarParameterValueSuccessAction = ActionType<typeof updateCarParameterValueSuccess>;\nexport type updateCarParameterValueSuccessActionCreator = ({ paramKey, paramValue }: { paramKey: string, paramValue?: string | number }) => updateCarParameterValueSuccessAction;\n\nexport const updateCarParameterValueError = () => action(UPDATE_CAR_PARAMETER_VALUE_ERROR);\nexport type updateCarParameterValueErrorAction = ActionType<typeof updateCarParameterValueError>;\nexport type updateCarParameterValueErrorActionCreator = () => updateCarParameterValueErrorAction;\n\nexport const loadCarManufacturersAttempt = () => action(LOAD_CAR_MANUFACTURERS_ATTEMPT);\nexport type loadCarManufacturersAttemptAction = ActionType<typeof loadCarManufacturersAttempt>;\nexport type loadCarManufacturersAttemptActionCreator = () => loadCarManufacturersAttemptAction;\n\nexport const loadCarManufacturersSuccess = (manufacturersList: string[]) => action(LOAD_CAR_MANUFACTURERS_SUCCESS, manufacturersList);\nexport type loadCarManufacturersSuccessAction = ActionType<typeof loadCarManufacturersSuccess>;\nexport type loadCarManufacturersSuccessActionCreator = (manufacturersList: string[]) => loadCarManufacturersSuccessAction;\n\nexport const loadCarManufacturersError = () => action(LOAD_CAR_MANUFACTURERS_ERROR);\nexport type loadCarManufacturersErrorAction = ActionType<typeof loadCarManufacturersError>;\nexport type loadCarManufacturersErrorActionCreator = () => loadCarManufacturersErrorAction;\n\nexport type CarAction = loadCarParametersAttemptAction\n  | loadCarParametersSuccessAction\n  | loadCarParametersErrorAction\n  | loadCarParametersResetAction\n  | updateCarParameterValueAttemptAction\n  | updateCarParameterValueSuccessAction\n  | updateCarParameterValueErrorAction\n  | loadCarManufacturersAttemptAction\n  | loadCarManufacturersSuccessAction\n  | loadCarManufacturersErrorAction\n;\n","import { action, ActionType } from 'typesafe-actions';\n\nimport {\n  ASK_PERMISSION_FOR_GEO_LOCATION,\n  CHANGE_CENTER_LOCATION,\n  CHANGE_ZOOM_LEVEL,\n  CHECK_PARKINGS_UPDATES_REQUEST,\n  CHECK_PARKINGS_UPDATES_SUCCESS,\n  DELETE_ALL_FREE_SLOTS,\n  DELETE_PARKING,\n  DELETE_VISIBLE_FREE_SLOTS,\n  PARKINGS_FETCH_START,\n  PARKINGS_FETCH_SUCCESS,\n  PARKINGS_REQUEST_FOR_FETCH,\n  POST_PARKING_ATTEMPT,\n  POST_PARKING_ERROR,\n  POST_PARKING_SUCCESS,\n  SYNCHRONIZE_LAT_LON,\n} from './constants';\nimport { PreparedParkings } from '../../interfaces/ResponseParkings';\nimport { ParkingAvailability } from '../../interfaces/ParkingAvailability';\nimport { ClientParking, Parking } from '../../interfaces/Parking';\n\n\nexport const setParkingsPageCenter = (lat: number, lon: number) => action(CHANGE_CENTER_LOCATION, { lat, lon });\nexport type setParkingsPageCenterAction = ActionType<typeof setParkingsPageCenter>;\nexport type setParkingsPageCenterActionCreator = (lat: number, lon: number) => setParkingsPageCenterAction;\n\n\nexport const setZoomLevel = (zoomLevel: number) => action(CHANGE_ZOOM_LEVEL, zoomLevel);\nexport type setZoomLevelAction = ActionType<typeof setZoomLevel>;\nexport type setZoomLevelActionCreator = (zoomLevel: number) => setZoomLevelAction;\n\n\nexport const fetchParkingsStart = () => action(PARKINGS_FETCH_START);\nexport type fetchParkingsStartAction = ActionType<typeof fetchParkingsStart>;\nexport type fetchParkingsStartActionCreator = () => fetchParkingsStartAction;\n\n\nexport const fetchParkingsRequest = () => action(PARKINGS_REQUEST_FOR_FETCH);\nexport type fetchParkingsRequestAction = ActionType<typeof fetchParkingsRequest>;\nexport type fetchParkingsRequestActionCreator = () => fetchParkingsRequestAction;\n\n\nexport const synchronizeLatLon = () => action(SYNCHRONIZE_LAT_LON);\nexport type synchronizeLatLonAction = ActionType<typeof synchronizeLatLon>;\nexport type synchronizeLatLonActionCreator = () => synchronizeLatLonAction;\n\n\nexport const fetchParkingsSuccess = (parkings: PreparedParkings) => action(PARKINGS_FETCH_SUCCESS, parkings);\nexport type fetchParkingsSuccessAction = ActionType<typeof fetchParkingsSuccess>;\nexport type fetchParkingsSuccessActionCreator = () => fetchParkingsSuccessAction;\n\n\nexport const checkParkingUpdatesRequest = () => action(CHECK_PARKINGS_UPDATES_REQUEST);\nexport type checkParkingUpdatesRequestAction = ActionType<typeof checkParkingUpdatesRequest>;\nexport type checkParkingUpdatesRequestActionCreator = () => checkParkingUpdatesRequestAction;\n\n\nexport const checkParkingUpdatesSuccess = (parkingAvailability: ParkingAvailability) => action(CHECK_PARKINGS_UPDATES_SUCCESS, parkingAvailability);\nexport type checkParkingUpdatesSuccessAction = ActionType<typeof checkParkingUpdatesSuccess>;\nexport type checkParkingUpdatesSuccessActionCreator = (parkingAvailability: ParkingAvailability) => checkParkingUpdatesSuccessAction;\n\n\nexport const postParkingAttempt = (parkingCreated: ClientParking, isFree: boolean) => action(POST_PARKING_ATTEMPT, { parkingCreated, isFree });\nexport type postParkingAttemptAction = ActionType<typeof postParkingAttempt>;\nexport type postParkingAttemptActionCreator = (parkingCreated: ClientParking, isFree: boolean) => postParkingAttemptAction;\n\n\nexport const postParkingSuccess = (parkingCreated: Parking, isFree: boolean) => action(POST_PARKING_SUCCESS, { parkingCreated, isFree });\nexport type postParkingSuccessAction = ActionType<typeof postParkingSuccess>;\nexport type postParkingSuccessActionCreator = (parkingCreated: Parking, isFree: boolean) => postParkingSuccessAction;\n\n\nexport const postParkingError = () => action(POST_PARKING_ERROR);\nexport type postParkingErrorAction = ActionType<typeof postParkingError>;\nexport type postParkingErrorActionCreator = () => postParkingErrorAction;\n\n\nexport const deleteParking = (parkingId: string) => action(DELETE_PARKING, parkingId);\nexport type deleteParkingAction = ActionType<typeof deleteParking>;\nexport type deleteParkingActionCreator = (parkingId: string) => deleteParkingAction;\n\n\nexport const deleteAllFreeSlots = () => action(DELETE_ALL_FREE_SLOTS);\nexport type deleteAllFreeSlotsAction = ActionType<typeof deleteAllFreeSlots>;\nexport type deleteAllFreeSlotsActionCreator = () => deleteAllFreeSlotsAction;\n\n\nexport const deleteVisibleFreeSlots = () => action(DELETE_VISIBLE_FREE_SLOTS);\nexport type deleteVisibleFreeSlotsAction = ActionType<typeof deleteVisibleFreeSlots>;\nexport type deleteVisibleFreeSlotsActionCreator = () => deleteVisibleFreeSlotsAction;\n\n\nexport const askPermissionForGeoLocation = () => action(ASK_PERMISSION_FOR_GEO_LOCATION);\nexport type askPermissionForGeoLocationAction = ActionType<typeof askPermissionForGeoLocation>;\nexport type askPermissionForGeoLocationActionCreator = () => askPermissionForGeoLocationAction;\n\n\nexport type Actions = setParkingsPageCenterAction\n  | setZoomLevelAction\n  | fetchParkingsRequestAction\n  | fetchParkingsStartAction\n  | fetchParkingsSuccessAction\n  | checkParkingUpdatesRequestAction\n  | checkParkingUpdatesSuccessAction\n  | postParkingAttemptAction\n  | postParkingSuccessAction\n  | postParkingErrorAction\n  | deleteParkingAction\n  | deleteAllFreeSlotsAction\n  | deleteVisibleFreeSlotsAction\n  | askPermissionForGeoLocationAction\n  ;\n","import { createSelector } from 'reselect';\nimport { Search } from 'history';\n\nimport { RootReducer } from '../rootReducer';\nimport { defaultLatLonSelector } from '../../containers/BaseConfigPage/BaseConfigSelectors';\nimport { Parking } from '../../interfaces/Parking';\nimport { RouterProps } from '../../interfaces/RouterProps';\n\nexport const routeLocationSelector = (state: RootReducer) => state.router.location;\nexport const routerPropsSelector = (_: RootReducer, routerProps: RouterProps) => routerProps;\n\nexport const routeParamsSelector = createSelector(\n  [routeLocationSelector],\n  paramsFromLocation,\n);\n\nfunction paramsFromLocation({ search }: { search: Search }) {\n  let params = null;\n\n  try {\n    params = JSON.parse(decodeURI(search.slice(1)));\n  } catch (e) {\n    params = search\n      .slice(1)\n      .split('&')\n      .reduce((params: any, currPair: string) => {\n        const [key, value] = currPair.split('=');\n        return {\n          ...params,\n          ...{ [key]: value },\n        };\n      }, {});\n  }\n\n  return params;\n}\n\nexport const latLonSelector = createSelector(\n  [routeParamsSelector, defaultLatLonSelector],\n  ({ lat: latFromUrl, lon: lonFromUrl }: { lat?: number, lon?: number }, defaultLatLon) => {\n    return ({\n      lat: isFinite(Number(latFromUrl)) ? Number(latFromUrl) : defaultLatLon.lat,\n      lon: isFinite(Number(lonFromUrl)) ? Number(lonFromUrl) : defaultLatLon.lon,\n    });\n  },\n);\n\nexport const zoomLevelSelector = (state: RootReducer) => state.parkingsPage.zoomLevel;\n\nconst parkingsPageDomainSelector = (state: RootReducer) => state.parkingsPage;\n\nexport const busyParkingsSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => parkingsPageDomain.busyParkings,\n);\n\nexport const freeParkingsSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => parkingsPageDomain.freeParkings,\n);\n\nexport const allParkingsSelector = createSelector(\n  [busyParkingsSelector, freeParkingsSelector],\n  (busyParkings, freeParkings) => [\n    ...busyParkings,\n    ...freeParkings,\n  ],\n);\n\nexport const isParkingFetchInProgressSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => parkingsPageDomain.isFetchInProgress,\n);\n\nexport const wasFetchPerformedSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => parkingsPageDomain.wasFetchPerformed,\n);\n\nexport const centerCoordinatesSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => ({\n    lat: parkingsPageDomain.centerLat,\n    lon: parkingsPageDomain.centerLon,\n  }),\n);\n\nexport const centerCoordinatesLatitudeSelector = createSelector(\n  [centerCoordinatesSelector],\n  (centerCoordinates) => centerCoordinates.lat,\n);\n\nexport const centerCoordinatesLongitudeSelector = createSelector(\n  [centerCoordinatesSelector],\n  (centerCoordinates) => centerCoordinates.lon,\n);\n\nexport const lastParkingsCheckTimestampSelector = createSelector(\n  [parkingsPageDomainSelector],\n  (parkingsPageDomain) => parkingsPageDomain.lastParkingsCheckTimestamp,\n);\n\ntype selectedParkingSelector = (rr: RootReducer) => Parking | null;\n// @ts-ignore\nexport const selectedParkingSelector: selectedParkingSelector = createSelector(\n  [routerPropsSelector, allParkingsSelector],\n  (routerProps, allParkings) => {\n    const selectedParkingId = routerProps.match.params.selectedParkingId;\n    const selectedParking = allParkings.find(({ id }) => id === selectedParkingId) || null;\n    return selectedParking;\n  },\n);\n","import { createSelector } from 'reselect';\n\nimport { RootReducer } from '../../store/rootReducer';\nimport { MAX_SEARCH_RADIUS_TO_FETCH } from './BaseConfigConstants';\n\nexport const configDomainSelector = (state: RootReducer) => state.config;\n\nexport const searchRadiusSelector = createSelector(\n  [configDomainSelector],\n  (configDomain) => configDomain.parkingSearchRadius,\n);\n\nexport const isSearchRadiusTooBigSelector = createSelector(\n  [searchRadiusSelector],\n  (searchRadius) => searchRadius > MAX_SEARCH_RADIUS_TO_FETCH,\n);\n\nexport const defaultLatLonSelector = createSelector(\n  [configDomainSelector],\n  (configDomain) => ({\n    lat: configDomain.startPointLat,\n    lon: configDomain.startPointLon,\n  }),\n);\n\nexport const sessionUidSelector = createSelector(\n  [configDomainSelector],\n  (configDomain) => configDomain.sessionUid,\n);\n\nexport const isSidebarOpenSelector = createSelector(\n  [configDomainSelector],\n  (configDomain) => configDomain.isSidebarOpen,\n);\n","export const SET_VOICE_NOTIFICATIONS = 'SET_VOICE_NOTIFICATIONS';\n\nexport const START_CHECKING_PARKING_UPDATES = 'Parkings Page/START_CHECKING_PARKING_UPDATES';\nexport const STOP_CHECKING_PARKING_UPDATES = 'Parkings Page/STOP_CHECKING_PARKING_UPDATES';\nexport const SET_CHECKING_PARKING_UPDATES = 'Parkings Page/SET_CHECKING_PARKING_UPDATES';\n","import { action, ActionType } from 'typesafe-actions';\n\nimport * as constants from './constants';\nimport { UserInfo, UserRole } from '../../interfaces/UserInfo';\n\n\nexport const loadAllUsersAttempt = () => action(constants.LOAD_ALL_USERS_ATTEMPT);\nexport type loadAllUsersAttemptAction = ActionType<typeof loadAllUsersAttempt>;\nexport type loadAllUsersAttemptActionCreator = () => loadAllUsersAttemptAction;\n\n\nexport const loadAllUsersSuccess = (users: UserInfo[]) => action(constants.LOAD_ALL_USERS_SUCCESS, users);\nexport type loadAllUsersSuccessAction = ActionType<typeof loadAllUsersSuccess>;\nexport type loadAllUsersSuccessActionCreator = (users: UserInfo[]) => loadAllUsersSuccessAction;\n\n\nexport const loadAllUsersError = () => action(constants.LOAD_ALL_USERS_ERROR);\nexport type loadAllUsersErrorAction = ActionType<typeof loadAllUsersError>;\nexport type loadAllUsersErrorActionCreator = () => loadAllUsersErrorAction;\n\n\nexport const setUserRoleAttempt = (id: string, role: UserRole) => action(constants.SET_USER_ROLE_ATTEMPT, { id, role });\nexport type setUserRoleAttemptAction = ActionType<typeof setUserRoleAttempt>;\nexport type setUserRoleAttemptActionCreator = (id: string, role: UserRole) => setUserRoleAttemptAction;\n\n\nexport const setUserRoleSuccess = (id: string, role: UserRole) => action(constants.SET_USER_ROLE_SUCCESS, { id, role });\nexport type setUserRoleSuccessAction = ActionType<typeof setUserRoleSuccess>;\nexport type setUserRoleSuccessActionCreator = (id: string, role: UserRole) => setUserRoleSuccessAction;\n\n\nexport const setUserRoleError = () => action(constants.SET_USER_ROLE_ERROR);\nexport type setUserRoleErrorAction = ActionType<typeof setUserRoleError>;\nexport type setUserRoleErrorActionCreator = () => setUserRoleErrorAction;\n\n\nexport type AllUsersAction = loadAllUsersAttemptAction\n  | loadAllUsersSuccessAction\n  | loadAllUsersErrorAction\n  | setUserRoleAttemptAction\n  | setUserRoleSuccessAction\n  | setUserRoleErrorAction\n;\n","import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\n\nexport const Tile = styled.section<{\n  withShadow?: boolean,\n  withRoundedCorners?: boolean,\n}>`\n  background-color: ${COLORS.colorAntiMain};\n  border-radius: ${({ withRoundedCorners }) => withRoundedCorners ? 15 : 0}px;\n  box-shadow: ${({ withShadow }) => withShadow ? '0 0 10px 0 rgba(90, 103, 121, 0.1)' : 'none'};\n`;\n\nexport const TileHeader = styled.header`\n  padding: 0 40px;\n  border-bottom: 1px solid ${COLORS.colorBorder};\n`;\n\nexport const TileBody = styled.main`\n  padding: 20px 40px;\n`;\n\n// @ts-ignore\nTile.defaultProps = {\n  withShadow: true,\n  withRoundedCorners: true,\n};\n","export const CHANGE_CENTER_LOCATION = 'App/CHANGE_CENTER_LOCATION';\nexport const CHANGE_ZOOM_LEVEL = 'App/CHANGE_ZOOM_LEVEL';\n\nexport const SYNCHRONIZE_LAT_LON = 'Parkings Page/SYNCHRONIZE_LAT_LON';\nexport const ASK_PERMISSION_FOR_GEO_LOCATION = 'Parkings Page/ASK_PERMISSION_FOR_GEO_LOCATION';\n\nexport const PARKINGS_FETCH_START = 'Parkings Page/PARKINGS_FETCH_START';\nexport const PARKINGS_REQUEST_FOR_FETCH = 'Parkings Page/PARKINGS_REQUEST_FOR_FETCH';\nexport const PARKINGS_FETCH_SUCCESS = 'Parkings Page/PARKINGS_FETCH_SUCCESS';\n\nexport const POST_PARKING_ATTEMPT = 'Parkings Page/POST_PARKING_ATTEMPT';\nexport const POST_PARKING_SUCCESS = 'Parkings Page/POST_PARKING_SUCCESS';\nexport const POST_PARKING_ERROR = 'Parkings Page/POST_PARKING_ERROR';\n\nexport const SET_PARKING_FREE_STATUS = 'Parkings Page/SET_PARKING_FREE_STATUS';\n\nexport const CHECK_PARKINGS_UPDATES_REQUEST = 'Parkings Page/CHECK_PARKINGS_UPDATES_REQUEST';\nexport const CHECK_PARKINGS_UPDATES_SUCCESS = 'Parkings Page/CHECK_PARKINGS_UPDATES_SUCCESS';\n\nexport const DELETE_PARKING = 'Parkings Page/DELETE_PARKING';\nexport const DELETE_ALL_FREE_SLOTS = 'Parkings Page/DELETE_ALL_FREE_SLOTS';\nexport const DELETE_VISIBLE_FREE_SLOTS = 'Parkings Page/DELETE_VISIBLE_FREE_SLOTS';\n","interface colorsPalette {\n  readonly colorMainText: string,\n  readonly colorGreyPopup: string,\n  readonly colorAntiMain: string,\n  readonly colorExtraText: string,\n  readonly colorAccent1: string,\n  readonly colorAccent2: string,\n  readonly colorAccent3: string,\n  readonly colorAccent4: string,\n  readonly colorInactive: string,\n  readonly colorBorder: string,\n  readonly colorBorderError: string,\n  readonly pageBackground: string,\n}\n\nexport const COLORS: colorsPalette = {\n  colorMainText: '#333333',\n  colorGreyPopup: '#d2d2d2',\n  colorAntiMain: '#ffffff',\n  colorExtraText: '#757575',\n  colorAccent1: '#7ceb7e',\n  colorAccent2: '#ff4a4a',\n  colorAccent3: '#f1970f',\n  colorAccent4: '#29a1fb',\n  colorInactive: '#c9c9c9',\n  colorBorder: '#dee1e4',\n  colorBorderError: '#df4930',\n  pageBackground: '#f5f6fa',\n};\n","import * as path from 'path';\n\nimport { UserInfo } from '../interfaces/UserInfo';\nimport { USER_ROLE_ADMIN, USER_ROLE_DRIVER, USER_ROLE_GUEST } from '../store/userState/reducer';\n\n\nexport default class UrlService {\n  public static rootUrl = '/free-parkings-ui';\n\n  public static readonly loginPageUrl = path.join(UrlService.rootUrl, '/login');\n  public static readonly loginPageRolesAllowed = new Set([\n    USER_ROLE_GUEST,\n  ]);\n\n  public static readonly signupPageUrl = path.join(UrlService.rootUrl, '/signup');\n  public static readonly signupPageRolesAllowed = new Set([\n    USER_ROLE_GUEST,\n  ]);\n\n  public static readonly configPageUrl = path.join(UrlService.rootUrl, '/config');\n  public static readonly configPageRolesAllowed = new Set([\n    USER_ROLE_DRIVER, USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly dashboardPageUrl = path.join(UrlService.rootUrl, '/dashboard');\n  public static readonly dashboardPageRolesAllowed = new Set([\n    USER_ROLE_DRIVER, USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly settingsPageUrl = path.join(UrlService.rootUrl, '/driver-account');\n  public static readonly settingsPageRolesAllowed = new Set([\n    USER_ROLE_DRIVER, USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly parkingsPageUrl = path.join(UrlService.rootUrl, '/parkings');\n  public static readonly parkingsPageRolesAllowed = new Set([\n    USER_ROLE_DRIVER, USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly findParkingsPageUrl = path.join(UrlService.parkingsPageUrl, '/find-parking');\n  public static readonly findParkingsPageRolesAllowed = new Set([\n    USER_ROLE_DRIVER, USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly createParkingPageUrl = path.join(UrlService.parkingsPageUrl, '/create-parking');\n  public static readonly editParkingPageUrl = path.join(UrlService.parkingsPageUrl, '/edit-parking');\n  public static readonly editParkingPageUrlWithParams = (parkingId: string) => path.join(UrlService.editParkingPageUrl, parkingId);\n  public static readonly editParkingPageUrlRoute = `${UrlService.editParkingPageUrl}/:selectedParkingId`;\n\n  public static readonly allUsersPageUrl = path.join(UrlService.rootUrl, '/all-users');\n  public static readonly allUsersPageRolesAllowed = new Set([\n    USER_ROLE_ADMIN,\n  ]);\n\n  public static readonly detectPageByUserInfo = function(userInfo?: UserInfo): string {\n    if (!userInfo || !userInfo.role || userInfo.role === USER_ROLE_GUEST) {\n      return UrlService.loginPageUrl;\n    } else if (userInfo.role === USER_ROLE_ADMIN || userInfo.role === USER_ROLE_DRIVER) {\n      return UrlService.dashboardPageUrl;\n    }\n    return UrlService.rootUrl;\n  };\n\n  public static readonly isRouteAllowed = function(userInfo: UserInfo, routeRolesAllowed: Set<string>): boolean {\n    return routeRolesAllowed.has(userInfo.role);\n  }\n}\n","import { RootReducer } from '../rootReducer';\n\n\nexport const areVoiceNotificationsEnabledSelector = (state: RootReducer) => state.parkingSettings.areVoiceNotificationsEnabled;\n\nexport const isParkingAutoSearchEnabledSelector = (state: RootReducer) => state.parkingSettings.isParkingAutoSearchEnabled;\n"],"sourceRoot":""}